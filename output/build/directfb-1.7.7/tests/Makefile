# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/DirectFB
pkgincludedir = $(includedir)/DirectFB
pkglibdir = $(libdir)/DirectFB
pkglibexecdir = $(libexecdir)/DirectFB
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabihf
target_triplet = arm-buildroot-linux-gnueabihf
bin_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_3) dfbtest_blit$(EXEEXT) \
	dfbtest_blit_multi$(EXEEXT) dfbtest_blit_threads$(EXEEXT) \
	dfbtest_blit2$(EXEEXT) dfbtest_clipboard$(EXEEXT) \
	dfbtest_fillrect$(EXEEXT) dfbtest_flip$(EXEEXT) \
	dfbtest_font$(EXEEXT) dfbtest_font_blend$(EXEEXT) \
	dfbtest_init$(EXEEXT) dfbtest_input$(EXEEXT) \
	dfbtest_layers$(EXEEXT) dfbtest_mirror$(EXEEXT) \
	dfbtest_prealloc$(EXEEXT) dfbtest_reinit$(EXEEXT) \
	dfbtest_resize$(EXEEXT) dfbtest_scale$(EXEEXT) \
	dfbtest_scale_nv21$(EXEEXT) dfbtest_stereo_window$(EXEEXT) \
	dfbtest_surface_compositor$(EXEEXT) \
	dfbtest_surface_compositor_threads$(EXEEXT) \
	dfbtest_surface_updates$(EXEEXT) dfbtest_sync$(EXEEXT) \
	dfbtest_video$(EXEEXT) dfbtest_waitserial$(EXEEXT) \
	dfbtest_water$(EXEEXT) dfbtest_window$(EXEEXT) \
	dfbtest_window_cursor$(EXEEXT) dfbtest_window_flip$(EXEEXT) \
	dfbtest_window_flip_once$(EXEEXT) \
	dfbtest_window_surface$(EXEEXT) dfbtest_window_update$(EXEEXT) \
	dfbtest_windows_watcher$(EXEEXT) direct_stream$(EXEEXT) \
	direct_test$(EXEEXT) dfbtest_alloc$(EXEEXT) \
	dfbtest_layer$(EXEEXT) dfbtest_stereo$(EXEEXT) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \
	$(am__EXEEXT_8)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = dfbtest_gl1$(EXEEXT) dfbtest_gl2$(EXEEXT) \
	dfbtest_gl3$(EXEEXT) dfbtest_old_gl2$(EXEEXT)
#am__EXEEXT_2 = $(am__EXEEXT_1)
#am__EXEEXT_2 = $(am__EXEEXT_1)
am__EXEEXT_3 =  \
	coretest_blit2$(EXEEXT) \
	coretest_task$(EXEEXT) \
	coretest_task_fillrect$(EXEEXT) \
	fusion_call$(EXEEXT) \
	fusion_call_bench$(EXEEXT) \
	fusion_fork$(EXEEXT) \
	fusion_reactor$(EXEEXT) \
	fusion_skirmish$(EXEEXT) \
	fusion_stream$(EXEEXT)
#am__EXEEXT_4 = OneBench$(EXEEXT) \
#	OneTest$(EXEEXT)
#am__EXEEXT_5 = voodoo_bench$(EXEEXT) \
#	voodoo_bench_client$(EXEEXT) \
#	voodoo_bench_server$(EXEEXT) \
#	voodoo_bench_client_unix$(EXEEXT) \
#	voodoo_bench_server_unix$(EXEEXT)
#am__EXEEXT_6 = sample1$(EXEEXT) testrun$(EXEEXT) \
#	testman$(EXEEXT)
am__EXEEXT_7 = divine_test$(EXEEXT)
#am__EXEEXT_8 = fdtest_bench$(EXEEXT) \
#	fdtest_coma$(EXEEXT) \
#	fdtest_init$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_OneBench_OBJECTS = OneBench.$(OBJEXT)
OneBench_OBJECTS = $(am_OneBench_OBJECTS)
#am__DEPENDENCIES_1 =  \
#	$(top_builddir)/lib/One/libone.la
#am__DEPENDENCIES_2 = $(top_builddir)/lib/voodoo/libvoodoo.la
am__DEPENDENCIES_3 = $(libdirectfb) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(libfusion) $(libdirect)
OneBench_DEPENDENCIES = $(am__DEPENDENCIES_3)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_OneTest_OBJECTS = OneTest.$(OBJEXT)
OneTest_OBJECTS = $(am_OneTest_OBJECTS)
OneTest_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_coretest_blit2_OBJECTS = coretest_blit2.$(OBJEXT)
coretest_blit2_OBJECTS = $(am_coretest_blit2_OBJECTS)
coretest_blit2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_coretest_task_OBJECTS = coretest_task.$(OBJEXT)
coretest_task_OBJECTS = $(am_coretest_task_OBJECTS)
coretest_task_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_coretest_task_fillrect_OBJECTS = coretest_task_fillrect.$(OBJEXT)
coretest_task_fillrect_OBJECTS = $(am_coretest_task_fillrect_OBJECTS)
coretest_task_fillrect_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_alloc_OBJECTS = dfbtest_alloc.$(OBJEXT)
dfbtest_alloc_OBJECTS = $(am_dfbtest_alloc_OBJECTS)
dfbtest_alloc_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_blit_OBJECTS = dfbtest_blit.$(OBJEXT)
dfbtest_blit_OBJECTS = $(am_dfbtest_blit_OBJECTS)
dfbtest_blit_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_blit2_OBJECTS = dfbtest_blit2.$(OBJEXT)
dfbtest_blit2_OBJECTS = $(am_dfbtest_blit2_OBJECTS)
dfbtest_blit2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_blit_multi_OBJECTS = dfbtest_blit_multi.$(OBJEXT)
dfbtest_blit_multi_OBJECTS = $(am_dfbtest_blit_multi_OBJECTS)
dfbtest_blit_multi_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_blit_threads_OBJECTS = dfbtest_blit_threads.$(OBJEXT)
dfbtest_blit_threads_OBJECTS = $(am_dfbtest_blit_threads_OBJECTS)
dfbtest_blit_threads_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_clipboard_OBJECTS = dfbtest_clipboard.$(OBJEXT)
dfbtest_clipboard_OBJECTS = $(am_dfbtest_clipboard_OBJECTS)
dfbtest_clipboard_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_fillrect_OBJECTS = dfbtest_fillrect.$(OBJEXT)
dfbtest_fillrect_OBJECTS = $(am_dfbtest_fillrect_OBJECTS)
dfbtest_fillrect_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_flip_OBJECTS = dfbtest_flip.$(OBJEXT)
dfbtest_flip_OBJECTS = $(am_dfbtest_flip_OBJECTS)
dfbtest_flip_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_font_OBJECTS = dfbtest_font.$(OBJEXT)
dfbtest_font_OBJECTS = $(am_dfbtest_font_OBJECTS)
dfbtest_font_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_font_blend_OBJECTS = dfbtest_font_blend.$(OBJEXT) \
	dfbapp.$(OBJEXT)
dfbtest_font_blend_OBJECTS = $(am_dfbtest_font_blend_OBJECTS)
dfbtest_font_blend_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libppdfb)
am_dfbtest_gl1_OBJECTS = dfbtest_gl1-dfbtest_gl1.$(OBJEXT)
dfbtest_gl1_OBJECTS = $(am_dfbtest_gl1_OBJECTS)
am__DEPENDENCIES_4 =
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_4)
dfbtest_gl1_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_5)
dfbtest_gl1_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dfbtest_gl1_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfbtest_gl2_OBJECTS = dfbtest_gl2-dfbtest_gl2.$(OBJEXT)
dfbtest_gl2_OBJECTS = $(am_dfbtest_gl2_OBJECTS)
dfbtest_gl2_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_4)
dfbtest_gl2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dfbtest_gl2_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfbtest_gl3_OBJECTS = dfbtest_gl3-dfbtest_gl3.$(OBJEXT)
dfbtest_gl3_OBJECTS = $(am_dfbtest_gl3_OBJECTS)
dfbtest_gl3_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_4)
dfbtest_gl3_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dfbtest_gl3_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_dfbtest_init_OBJECTS = dfbtest_init.$(OBJEXT)
dfbtest_init_OBJECTS = $(am_dfbtest_init_OBJECTS)
dfbtest_init_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_input_OBJECTS = dfbtest_input.$(OBJEXT)
dfbtest_input_OBJECTS = $(am_dfbtest_input_OBJECTS)
dfbtest_input_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_layer_OBJECTS = dfbtest_layer.$(OBJEXT)
dfbtest_layer_OBJECTS = $(am_dfbtest_layer_OBJECTS)
dfbtest_layer_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_layers_OBJECTS = dfbtest_layers.$(OBJEXT)
dfbtest_layers_OBJECTS = $(am_dfbtest_layers_OBJECTS)
dfbtest_layers_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_mirror_OBJECTS = dfbtest_mirror.$(OBJEXT)
dfbtest_mirror_OBJECTS = $(am_dfbtest_mirror_OBJECTS)
dfbtest_mirror_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_old_gl2_OBJECTS =  \
	dfbtest_old_gl2-dfbtest_old_gl2.$(OBJEXT)
dfbtest_old_gl2_OBJECTS = $(am_dfbtest_old_gl2_OBJECTS)
dfbtest_old_gl2_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_4)
dfbtest_old_gl2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(dfbtest_old_gl2_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_dfbtest_prealloc_OBJECTS = dfbtest_prealloc.$(OBJEXT)
dfbtest_prealloc_OBJECTS = $(am_dfbtest_prealloc_OBJECTS)
dfbtest_prealloc_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_reinit_OBJECTS = dfbtest_reinit.$(OBJEXT)
dfbtest_reinit_OBJECTS = $(am_dfbtest_reinit_OBJECTS)
dfbtest_reinit_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_resize_OBJECTS = dfbtest_resize.$(OBJEXT)
dfbtest_resize_OBJECTS = $(am_dfbtest_resize_OBJECTS)
dfbtest_resize_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_scale_OBJECTS = dfbtest_scale.$(OBJEXT)
dfbtest_scale_OBJECTS = $(am_dfbtest_scale_OBJECTS)
dfbtest_scale_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_scale_nv21_OBJECTS = dfbtest_scale_nv21.$(OBJEXT)
dfbtest_scale_nv21_OBJECTS = $(am_dfbtest_scale_nv21_OBJECTS)
dfbtest_scale_nv21_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_stereo_OBJECTS = dfbtest_stereo.$(OBJEXT)
dfbtest_stereo_OBJECTS = $(am_dfbtest_stereo_OBJECTS)
dfbtest_stereo_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_stereo_window_OBJECTS = dfbtest_stereo_window.$(OBJEXT)
dfbtest_stereo_window_OBJECTS = $(am_dfbtest_stereo_window_OBJECTS)
dfbtest_stereo_window_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_surface_compositor_OBJECTS =  \
	dfbtest_surface_compositor.$(OBJEXT)
dfbtest_surface_compositor_OBJECTS =  \
	$(am_dfbtest_surface_compositor_OBJECTS)
dfbtest_surface_compositor_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_surface_compositor_threads_OBJECTS =  \
	dfbtest_surface_compositor_threads.$(OBJEXT)
dfbtest_surface_compositor_threads_OBJECTS =  \
	$(am_dfbtest_surface_compositor_threads_OBJECTS)
dfbtest_surface_compositor_threads_DEPENDENCIES =  \
	$(am__DEPENDENCIES_3)
am_dfbtest_surface_updates_OBJECTS =  \
	dfbtest_surface_updates.$(OBJEXT)
dfbtest_surface_updates_OBJECTS =  \
	$(am_dfbtest_surface_updates_OBJECTS)
dfbtest_surface_updates_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_sync_OBJECTS = dfbtest_sync.$(OBJEXT)
dfbtest_sync_OBJECTS = $(am_dfbtest_sync_OBJECTS)
dfbtest_sync_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_video_OBJECTS = dfbtest_video.$(OBJEXT)
dfbtest_video_OBJECTS = $(am_dfbtest_video_OBJECTS)
dfbtest_video_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_waitserial_OBJECTS = dfbtest_waitserial.$(OBJEXT)
dfbtest_waitserial_OBJECTS = $(am_dfbtest_waitserial_OBJECTS)
dfbtest_waitserial_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_water_OBJECTS = dfbtest_water.$(OBJEXT)
dfbtest_water_OBJECTS = $(am_dfbtest_water_OBJECTS)
dfbtest_water_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_OBJECTS = dfbtest_window.$(OBJEXT)
dfbtest_window_OBJECTS = $(am_dfbtest_window_OBJECTS)
dfbtest_window_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_cursor_OBJECTS = dfbtest_window_cursor.$(OBJEXT)
dfbtest_window_cursor_OBJECTS = $(am_dfbtest_window_cursor_OBJECTS)
dfbtest_window_cursor_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_flip_OBJECTS = dfbtest_window_flip.$(OBJEXT)
dfbtest_window_flip_OBJECTS = $(am_dfbtest_window_flip_OBJECTS)
dfbtest_window_flip_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_flip_once_OBJECTS =  \
	dfbtest_window_flip_once.$(OBJEXT)
dfbtest_window_flip_once_OBJECTS =  \
	$(am_dfbtest_window_flip_once_OBJECTS)
dfbtest_window_flip_once_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_surface_OBJECTS = dfbtest_window_surface.$(OBJEXT)
dfbtest_window_surface_OBJECTS = $(am_dfbtest_window_surface_OBJECTS)
dfbtest_window_surface_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_window_update_OBJECTS = dfbtest_window_update.$(OBJEXT)
dfbtest_window_update_OBJECTS = $(am_dfbtest_window_update_OBJECTS)
dfbtest_window_update_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dfbtest_windows_watcher_OBJECTS =  \
	dfbtest_windows_watcher.$(OBJEXT)
dfbtest_windows_watcher_OBJECTS =  \
	$(am_dfbtest_windows_watcher_OBJECTS)
dfbtest_windows_watcher_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_direct_stream_OBJECTS = direct_stream.$(OBJEXT)
direct_stream_OBJECTS = $(am_direct_stream_OBJECTS)
direct_stream_DEPENDENCIES = $(libdirect)
am_direct_test_OBJECTS = direct_test.$(OBJEXT)
direct_test_OBJECTS = $(am_direct_test_OBJECTS)
direct_test_DEPENDENCIES = $(libdirect)
am_divine_test_OBJECTS = divine_test.$(OBJEXT)
divine_test_OBJECTS = $(am_divine_test_OBJECTS)
divine_test_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libdivine)
am_fdtest_bench_OBJECTS = fdtest_bench.$(OBJEXT)
fdtest_bench_OBJECTS = $(am_fdtest_bench_OBJECTS)
fdtest_bench_DEPENDENCIES = $(libfusion) $(libdirect) $(libfusiondale)
am_fdtest_coma_OBJECTS = fdtest_coma.$(OBJEXT)
fdtest_coma_OBJECTS = $(am_fdtest_coma_OBJECTS)
fdtest_coma_DEPENDENCIES = $(libfusion) $(libdirect) $(libfusiondale)
am_fdtest_init_OBJECTS = fdtest_init.$(OBJEXT)
fdtest_init_OBJECTS = $(am_fdtest_init_OBJECTS)
fdtest_init_DEPENDENCIES = $(libfusion) $(libdirect) $(libfusiondale)
am_fusion_call_OBJECTS = fusion_call.$(OBJEXT)
fusion_call_OBJECTS = $(am_fusion_call_OBJECTS)
fusion_call_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_fusion_call_bench_OBJECTS = fusion_call_bench.$(OBJEXT)
fusion_call_bench_OBJECTS = $(am_fusion_call_bench_OBJECTS)
fusion_call_bench_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_fusion_fork_OBJECTS = fusion_fork.$(OBJEXT)
fusion_fork_OBJECTS = $(am_fusion_fork_OBJECTS)
fusion_fork_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_fusion_reactor_OBJECTS = fusion_reactor.$(OBJEXT)
fusion_reactor_OBJECTS = $(am_fusion_reactor_OBJECTS)
fusion_reactor_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_fusion_skirmish_OBJECTS = fusion_skirmish.$(OBJEXT)
fusion_skirmish_OBJECTS = $(am_fusion_skirmish_OBJECTS)
fusion_skirmish_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_fusion_stream_OBJECTS = fusion_stream.$(OBJEXT)
fusion_stream_OBJECTS = $(am_fusion_stream_OBJECTS)
fusion_stream_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_sample1_OBJECTS = sample1.$(OBJEXT)
sample1_OBJECTS = $(am_sample1_OBJECTS)
sample1_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libsawman)
am_testman_OBJECTS = testman.$(OBJEXT)
testman_OBJECTS = $(am_testman_OBJECTS)
testman_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libsawman)
am_testrun_OBJECTS = testrun.$(OBJEXT)
testrun_OBJECTS = $(am_testrun_OBJECTS)
testrun_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libsawman)
am_voodoo_bench_OBJECTS = voodoo_bench.$(OBJEXT)
voodoo_bench_OBJECTS = $(am_voodoo_bench_OBJECTS)
voodoo_bench_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_voodoo_bench_client_OBJECTS = voodoo_bench_client.$(OBJEXT)
voodoo_bench_client_OBJECTS = $(am_voodoo_bench_client_OBJECTS)
voodoo_bench_client_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_voodoo_bench_client_unix_OBJECTS =  \
	voodoo_bench_client_unix.$(OBJEXT)
voodoo_bench_client_unix_OBJECTS =  \
	$(am_voodoo_bench_client_unix_OBJECTS)
voodoo_bench_client_unix_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_voodoo_bench_server_OBJECTS = voodoo_bench_server.$(OBJEXT)
voodoo_bench_server_OBJECTS = $(am_voodoo_bench_server_OBJECTS)
voodoo_bench_server_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_voodoo_bench_server_unix_OBJECTS =  \
	voodoo_bench_server_unix.$(OBJEXT)
voodoo_bench_server_unix_OBJECTS =  \
	$(am_voodoo_bench_server_unix_OBJECTS)
voodoo_bench_server_unix_DEPENDENCIES = $(am__DEPENDENCIES_3)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(OneBench_SOURCES) $(OneTest_SOURCES) \
	$(coretest_blit2_SOURCES) $(coretest_task_SOURCES) \
	$(coretest_task_fillrect_SOURCES) $(dfbtest_alloc_SOURCES) \
	$(dfbtest_blit_SOURCES) $(dfbtest_blit2_SOURCES) \
	$(dfbtest_blit_multi_SOURCES) $(dfbtest_blit_threads_SOURCES) \
	$(dfbtest_clipboard_SOURCES) $(dfbtest_fillrect_SOURCES) \
	$(dfbtest_flip_SOURCES) $(dfbtest_font_SOURCES) \
	$(dfbtest_font_blend_SOURCES) $(dfbtest_gl1_SOURCES) \
	$(dfbtest_gl2_SOURCES) $(dfbtest_gl3_SOURCES) \
	$(dfbtest_init_SOURCES) $(dfbtest_input_SOURCES) \
	$(dfbtest_layer_SOURCES) $(dfbtest_layers_SOURCES) \
	$(dfbtest_mirror_SOURCES) $(dfbtest_old_gl2_SOURCES) \
	$(dfbtest_prealloc_SOURCES) $(dfbtest_reinit_SOURCES) \
	$(dfbtest_resize_SOURCES) $(dfbtest_scale_SOURCES) \
	$(dfbtest_scale_nv21_SOURCES) $(dfbtest_stereo_SOURCES) \
	$(dfbtest_stereo_window_SOURCES) \
	$(dfbtest_surface_compositor_SOURCES) \
	$(dfbtest_surface_compositor_threads_SOURCES) \
	$(dfbtest_surface_updates_SOURCES) $(dfbtest_sync_SOURCES) \
	$(dfbtest_video_SOURCES) $(dfbtest_waitserial_SOURCES) \
	$(dfbtest_water_SOURCES) $(dfbtest_window_SOURCES) \
	$(dfbtest_window_cursor_SOURCES) \
	$(dfbtest_window_flip_SOURCES) \
	$(dfbtest_window_flip_once_SOURCES) \
	$(dfbtest_window_surface_SOURCES) \
	$(dfbtest_window_update_SOURCES) \
	$(dfbtest_windows_watcher_SOURCES) $(direct_stream_SOURCES) \
	$(direct_test_SOURCES) $(divine_test_SOURCES) \
	$(fdtest_bench_SOURCES) $(fdtest_coma_SOURCES) \
	$(fdtest_init_SOURCES) $(fusion_call_SOURCES) \
	$(fusion_call_bench_SOURCES) $(fusion_fork_SOURCES) \
	$(fusion_reactor_SOURCES) $(fusion_skirmish_SOURCES) \
	$(fusion_stream_SOURCES) $(sample1_SOURCES) $(testman_SOURCES) \
	$(testrun_SOURCES) $(voodoo_bench_SOURCES) \
	$(voodoo_bench_client_SOURCES) \
	$(voodoo_bench_client_unix_SOURCES) \
	$(voodoo_bench_server_SOURCES) \
	$(voodoo_bench_server_unix_SOURCES)
DIST_SOURCES = $(OneBench_SOURCES) $(OneTest_SOURCES) \
	$(coretest_blit2_SOURCES) $(coretest_task_SOURCES) \
	$(coretest_task_fillrect_SOURCES) $(dfbtest_alloc_SOURCES) \
	$(dfbtest_blit_SOURCES) $(dfbtest_blit2_SOURCES) \
	$(dfbtest_blit_multi_SOURCES) $(dfbtest_blit_threads_SOURCES) \
	$(dfbtest_clipboard_SOURCES) $(dfbtest_fillrect_SOURCES) \
	$(dfbtest_flip_SOURCES) $(dfbtest_font_SOURCES) \
	$(dfbtest_font_blend_SOURCES) $(dfbtest_gl1_SOURCES) \
	$(dfbtest_gl2_SOURCES) $(dfbtest_gl3_SOURCES) \
	$(dfbtest_init_SOURCES) $(dfbtest_input_SOURCES) \
	$(dfbtest_layer_SOURCES) $(dfbtest_layers_SOURCES) \
	$(dfbtest_mirror_SOURCES) $(dfbtest_old_gl2_SOURCES) \
	$(dfbtest_prealloc_SOURCES) $(dfbtest_reinit_SOURCES) \
	$(dfbtest_resize_SOURCES) $(dfbtest_scale_SOURCES) \
	$(dfbtest_scale_nv21_SOURCES) $(dfbtest_stereo_SOURCES) \
	$(dfbtest_stereo_window_SOURCES) \
	$(dfbtest_surface_compositor_SOURCES) \
	$(dfbtest_surface_compositor_threads_SOURCES) \
	$(dfbtest_surface_updates_SOURCES) $(dfbtest_sync_SOURCES) \
	$(dfbtest_video_SOURCES) $(dfbtest_waitserial_SOURCES) \
	$(dfbtest_water_SOURCES) $(dfbtest_window_SOURCES) \
	$(dfbtest_window_cursor_SOURCES) \
	$(dfbtest_window_flip_SOURCES) \
	$(dfbtest_window_flip_once_SOURCES) \
	$(dfbtest_window_surface_SOURCES) \
	$(dfbtest_window_update_SOURCES) \
	$(dfbtest_windows_watcher_SOURCES) $(direct_stream_SOURCES) \
	$(direct_test_SOURCES) $(divine_test_SOURCES) \
	$(fdtest_bench_SOURCES) $(fdtest_coma_SOURCES) \
	$(fdtest_init_SOURCES) $(fusion_call_SOURCES) \
	$(fusion_call_bench_SOURCES) $(fusion_fork_SOURCES) \
	$(fusion_reactor_SOURCES) $(fusion_skirmish_SOURCES) \
	$(fusion_stream_SOURCES) $(sample1_SOURCES) $(testman_SOURCES) \
	$(testrun_SOURCES) $(voodoo_bench_SOURCES) \
	$(voodoo_bench_client_SOURCES) \
	$(voodoo_bench_client_unix_SOURCES) \
	$(voodoo_bench_server_SOURCES) \
	$(voodoo_bench_server_unix_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = voodoo
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/rules/libs_deps.make
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing aclocal-1.15 
ALSA_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/alsa  
ALSA_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lasound  
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ar
AS = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-as
ASFLAGS = 
AUTOCONF = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing autoconf
AUTOHEADER = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing autoheader
AUTOMAKE = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing automake-1.15
AVIFILE_CFLAGS = 
AVIFILE_CONFIG = 
AVIFILE_LIBS = 
AWK = mawk
CC = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-gcc
CCAS = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-gcc
CCASDEPMODE = depmode=none
CCASFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os 
CCDEPMODE = depmode=none
CDDB_CFLAGS = 
CDDB_LIBS = 
CFLAGS = -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-strict-aliasing -Werror-implicit-function-declaration -O3 -g2 -ffast-math -pipe -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_GNU_SOURCE  -finstrument-functions -std=gnu99 -Werror-implicit-function-declaration
CPP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-cpp
CPPFLAGS = -D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/cairo
CXX = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-g++
CXXCPP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -Wall -Wno-strict-aliasing -std=c++0x -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -O3 -g2 -ffast-math -pipe -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_GNU_SOURCE  -finstrument-functions
CXXSTD = c++0x
CYGPATH_W = echo
DATADIR = ${datarootdir}/directfb-1.7.7
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEP_ONE = 
DEP_VOODOO = 
DFB_CFLAGS_OMIT_FRAME_POINTER = -fomit-frame-pointer
DFB_INTERNAL_CFLAGS = -D_GNU_SOURCE  -finstrument-functions
DFB_LDFLAGS =  -lz
DFB_SMOOTH_SCALING = 
DIRECTFB_BINARY_AGE = 0
DIRECTFB_BUILD_ONE = 0
DIRECTFB_BUILD_PURE_VOODOO = 0
DIRECTFB_BUILD_VOODOO = 0
DIRECTFB_CSOURCE = 
DIRECTFB_INTERFACE_AGE = 0
DIRECTFB_MAJOR_VERSION = 1
DIRECTFB_MICRO_VERSION = 7
DIRECTFB_MINOR_VERSION = 7
DIRECTFB_VERSION = 1.7.7
DIRECTFB_VERSION_VENDOR = 
DIRECT_BUILD_DEBUG = 0
DIRECT_BUILD_DEBUGS = 1
DIRECT_BUILD_DYNLOAD = 1
DIRECT_BUILD_GCC_ATOMICS = 0
DIRECT_BUILD_GETTID = 1
DIRECT_BUILD_MULTICORE = 1
DIRECT_BUILD_NETWORK = 1
DIRECT_BUILD_OSTYPE = DIRECT_OS_LINUX_GNU_LIBC
DIRECT_BUILD_STDBOOL = 1
DIRECT_BUILD_TEXT = 1
DIRECT_BUILD_TRACE = 1
DLLTOOL = false
DRMKMS_CFLAGS = 
DRMKMS_LIBS = 
DSYMUTIL = 
DUMPBIN = 
DYNLIB = -ldl
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FFMPEG_CFLAGS = 
FFMPEG_LIBS = 
FGREP = /bin/grep -F
FLASH_LIBS = 
FLUXCOMP = 
FLUXED_ARGS_BYTES = 1024
FREETYPE_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
FREETYPE_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lfreetype  
FREETYPE_PROVIDER = 
FS_MAX_CHANNELS = 6
FUSION_BUILD_KERNEL = 0
FUSION_BUILD_MULTI = 0
FUSION_MESSAGE_SIZE = 16384
GENERIC_INCLUDEDIR = ${prefix}/include
GIF_PROVIDER = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GL_LIBS = 
GP2D_CFLAGS = 
GP2D_LIBS = 
GREP = /bin/grep
GSTREAMER_INCL = 
GSTREAMER_LIBS = 
HAVE_LINUX = 
IMLIB2_CFLAGS = 
IMLIB2_CONFIG = 
IMLIB2_LIBS = 
INCLUDEDIR = ${prefix}/include/directfb
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTERNALINCLUDEDIR = ${prefix}/include/directfb-internal
JASPER_LIBS = 
JPEG_PROVIDER = 
LD = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ld
LDFLAGS = 
LIBJPEG = -ljpeg
LIBM = -lm
LIBMNG = 
LIBMPEG3_LIBS = 
LIBOBJS = 
LIBPNG_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/libpng16 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBPNG_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lpng16 -lz  
LIBS = -ldl -lrt -lpthread 
LIBTIFF_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBTIFF_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -ltiff  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBWEBP_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBWEBP_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lwebp  
LINOTYPE_CFLAGS = 
LINOTYPE_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_BINARY = 7
LT_CURRENT = 7
LT_RELEASE = 1.7
LT_REVISION = 0
LT_SYS_LIBRARY_PATH = 
MAD_LIBS = 
MAINT = #
MAKEINFO = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing makeinfo
MAN2HTML = no
MANIFEST_TOOL = :
MESA_CFLAGS = 
MESA_LIBS = 
MKDIR_P = /bin/mkdir -p
MNG_PROVIDER = 
MODULEDIR = ${exec_prefix}/lib/directfb-1.7-7
MODULEDIRNAME = directfb-1.7-7
NM = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-nm
NMEDIT = 
OBJDUMP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-objdump
OBJEXT = o
OPENQUICKTIME_LIBS = 
OSX_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = DirectFB
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PNG_PROVIDER = 
PVR2D_CFLAGS = 
PVR2D_LIBS = 
RANLIB = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ranlib
RTLIB = -lrt
RUNTIME_SYSROOT = 
SDL_CFLAGS = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SH772X_DEP_CFLAGS = 
SH772X_DEP_LIBS = 
SH772X_SHJPEG_DEP_CFLAGS = 
SH772X_SHJPEG_DEP_LIBS = 
SHELL = /bin/bash
SOPATH = ${exec_prefix}/lib/libdirectfb-1.7.so.7
STRIP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-strip
SVG_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/cairo -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/pixman-1 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2  -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/libpng16  
SVG_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lsvg-cairo -lsvg -lpng -ljpeg -lz -lcairo  
SWFDEC_CFLAGS = 
SWFDEC_LIBS = 
SYSCONFDIR = /etc
THREADFLAGS = -D_REENTRANT
THREADLIB = -lpthread
TIMIDITY_CFLAGS = 
TIMIDITY_LIBS = 
TSLIB_CFLAGS = 
TSLIB_LIBS = 
VERSION = 1.7.7
VNC_CFLAGS = 
VNC_CONFIG = 
VNC_LIBS = 
VOODOO_BUILD_NO_SETSOCKOPT = 0
VORBISFILE_CFLAGS = 
VORBISFILE_LIBS = 
X11VDPAU_CFLAGS = 
X11VDPAU_LIBS = 
X11_CFLAGS = 
X11_LIBS = 
XINE_CFLAGS = 
XINE_CONFIG = 
XINE_LIBS = 
XINE_PLUGINDIR = 
XINE_VDPAU_CFLAGS = 
XINE_VDPAU_LIBS = 
XINE_VDPAU_PLUGINDIR = 
ZLIB_LIBS = -lz
abs_builddir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/tests
abs_srcdir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/tests
abs_top_builddir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7
abs_top_srcdir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = /usr
host = arm-buildroot-linux-gnueabihf
host_alias = arm-buildroot-linux-gnueabihf
host_cpu = arm
host_os = linux-gnueabihf
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target = arm-buildroot-linux-gnueabihf
target_alias = arm-buildroot-linux-gnueabihf
target_cpu = arm
target_os = linux-gnueabihf
target_vendor = buildroot
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = \
	-DDATADIR=\"${RUNTIME_SYSROOT}${datarootdir}/directfb-1.7.7\"	\
	-DFONT=\"${datarootdir}/directfb-1.7.7/decker.ttf\"

#ONE_PROGS = \
#	OneBench	\
#	OneTest

#SUBDIRS = voodoo
#VOODOO_PROGS = \
#	voodoo_bench	\
#	voodoo_bench_client		\
#	voodoo_bench_server		\
#	voodoo_bench_client_unix	\
#	voodoo_bench_server_unix

#SAWMAN_PROGS = \
#	sample1	\
#	testrun	\
#	testman

DIVINE_PROGS = \
	divine_test

#FUSIONDALE_PROGS = \
#	fdtest_bench \
#	fdtest_coma \
#	fdtest_init

INCLUDES = \
	-I$(top_builddir)/include \
	-I$(top_builddir)/lib \
	-I$(top_builddir)/lib/One \
	-I$(top_builddir)/lib/divine \
	-I$(top_builddir)/lib/fusiondale \
	-I$(top_builddir)/lib/sawman \
	-I$(top_builddir)/src	\
	-I$(top_srcdir)/include	\
	-I$(top_srcdir)/lib	\
	-I$(top_srcdir)/lib/One	\
	-I$(top_srcdir)/lib/divine	\
	-I$(top_srcdir)/lib/fusiondale	\
	-I$(top_srcdir)/lib/sawman	\
	-I$(top_srcdir)/src	\
	-I$(top_srcdir)/include/++dfb	\
	-I$(top_srcdir)/examples/++dfb	\
	-DLINUX_2_6

GL_PROGS_ = \
	dfbtest_gl1	\
	dfbtest_gl2	\
	dfbtest_gl3	\
	dfbtest_old_gl2

#GL_PROGS = $(GL_PROGS_)
#GL_PROGS = $(GL_PROGS_)
NON_PURE_VOODOO_PROGS = \
	coretest_blit2	\
	coretest_task	\
	coretest_task_fillrect	\
	fusion_call	\
	fusion_call_bench	\
	fusion_fork	\
	fusion_reactor	\
	fusion_skirmish	\
	fusion_stream

#NON_PURE_VOODOO_PROGS = 
libdirect = $(top_builddir)/lib/direct/libdirect.la
libfusion = $(top_builddir)/lib/fusion/libfusion.la
libdirectfb = $(top_builddir)/src/libdirectfb.la
libsawman = $(top_builddir)/lib/sawman/libsawman.la
libdivine = $(top_builddir)/lib/divine/libdivine.la
libfusiondale = $(top_builddir)/lib/fusiondale/libfusiondale.la
libfusionsound = $(top_builddir)/lib/fusionsound/libfusionsound.la
libppdfb = $(top_builddir)/lib/++dfb/lib++dfb.la
libvoodoo = 
#libvoodoo = $(top_builddir)/lib/voodoo/libvoodoo.la
libone = 
#libone = $(top_builddir)/lib/One/libone.la
DFB_BASE_LIBS = $(libdirectfb) $(libone) $(libvoodoo) $(libfusion) $(libdirect)
GL_DFB_BASE_LIBS = $(GL_LIBS)
GLES2_DFB_BASE_LIBS = $(GLES2_LIBS)

# for DFB_BASE_LIBS etc...
coretest_blit2_SOURCES = coretest_blit2.c
coretest_blit2_LDADD = $(DFB_BASE_LIBS)
coretest_task_SOURCES = coretest_task.cpp
coretest_task_LDADD = $(DFB_BASE_LIBS)
coretest_task_fillrect_SOURCES = coretest_task_fillrect.cpp
coretest_task_fillrect_LDADD = $(DFB_BASE_LIBS)
dfbtest_blit_SOURCES = dfbtest_blit.c
dfbtest_blit_LDADD = $(DFB_BASE_LIBS)
dfbtest_blit_multi_SOURCES = dfbtest_blit_multi.c
dfbtest_blit_multi_LDADD = $(DFB_BASE_LIBS)
dfbtest_blit_threads_SOURCES = dfbtest_blit_threads.c
dfbtest_blit_threads_LDADD = $(DFB_BASE_LIBS)
dfbtest_blit2_SOURCES = dfbtest_blit2.c
dfbtest_blit2_LDADD = $(DFB_BASE_LIBS)
dfbtest_clipboard_SOURCES = dfbtest_clipboard.c
dfbtest_clipboard_LDADD = $(DFB_BASE_LIBS)
dfbtest_fillrect_SOURCES = dfbtest_fillrect.c
dfbtest_fillrect_LDADD = $(DFB_BASE_LIBS)
dfbtest_flip_SOURCES = dfbtest_flip.c
dfbtest_flip_LDADD = $(DFB_BASE_LIBS)
dfbtest_font_SOURCES = dfbtest_font.c
dfbtest_font_LDADD = $(DFB_BASE_LIBS)
dfbtest_font_blend_SOURCES = dfbtest_font_blend.cpp ../examples/++dfb/dfbapp.cpp
dfbtest_font_blend_LDADD = $(DFB_BASE_LIBS) $(libppdfb)
dfbtest_init_SOURCES = dfbtest_init.c
dfbtest_init_LDADD = $(DFB_BASE_LIBS)
dfbtest_input_SOURCES = dfbtest_input.c
dfbtest_input_LDADD = $(DFB_BASE_LIBS)
dfbtest_layers_SOURCES = dfbtest_layers.c
dfbtest_layers_LDADD = $(DFB_BASE_LIBS)
dfbtest_gl1_SOURCES = dfbtest_gl1.c
dfbtest_gl1_CFLAGS = $(GLES2_CFLAGS)
dfbtest_gl1_LDADD = $(DFB_BASE_LIBS) $(GL_DFB_BASE_LIBS) $(GLES2_DFB_BASE_LIBS)
dfbtest_gl2_SOURCES = dfbtest_gl2.c
dfbtest_gl2_CFLAGS = $(GLES2_CFLAGS)
dfbtest_gl2_LDADD = $(DFB_BASE_LIBS) $(GL_DFB_BASE_LIBS) $(GLES2_DFB_BASE_LIBS) $(LIBM)
dfbtest_gl3_SOURCES = dfbtest_gl3.c
dfbtest_gl3_CFLAGS = $(GLES2_CFLAGS)
dfbtest_gl3_LDADD = $(DFB_BASE_LIBS) $(GL_DFB_BASE_LIBS) $(GLES2_DFB_BASE_LIBS) $(LIBM)
dfbtest_old_gl2_SOURCES = dfbtest_old_gl2.c
dfbtest_old_gl2_CFLAGS = $(GLES2_CFLAGS)
dfbtest_old_gl2_LDADD = $(DFB_BASE_LIBS) $(GL_DFB_BASE_LIBS) $(GLES2_DFB_BASE_LIBS) $(LIBM)
dfbtest_layer_SOURCES = dfbtest_layer.c
dfbtest_layer_LDADD = $(DFB_BASE_LIBS)
dfbtest_stereo_SOURCES = dfbtest_stereo.c
dfbtest_stereo_LDADD = $(DFB_BASE_LIBS)
dfbtest_alloc_SOURCES = dfbtest_alloc.c
dfbtest_alloc_LDADD = $(DFB_BASE_LIBS)
dfbtest_mirror_SOURCES = dfbtest_mirror.c
dfbtest_mirror_LDADD = $(DFB_BASE_LIBS)
dfbtest_prealloc_SOURCES = dfbtest_prealloc.c
dfbtest_prealloc_LDADD = $(DFB_BASE_LIBS)
dfbtest_reinit_SOURCES = dfbtest_reinit.c
dfbtest_reinit_LDADD = $(DFB_BASE_LIBS)
dfbtest_resize_SOURCES = dfbtest_resize.c
dfbtest_resize_LDADD = $(DFB_BASE_LIBS)
dfbtest_scale_SOURCES = dfbtest_scale.c
dfbtest_scale_LDADD = $(DFB_BASE_LIBS)
dfbtest_scale_nv21_SOURCES = dfbtest_scale_nv21.c
dfbtest_scale_nv21_LDADD = $(DFB_BASE_LIBS)
dfbtest_stereo_window_SOURCES = dfbtest_stereo_window.c
dfbtest_stereo_window_LDADD = $(DFB_BASE_LIBS)
dfbtest_surface_compositor_SOURCES = dfbtest_surface_compositor.c
dfbtest_surface_compositor_LDADD = $(DFB_BASE_LIBS)
dfbtest_surface_compositor_threads_SOURCES = dfbtest_surface_compositor_threads.c
dfbtest_surface_compositor_threads_LDADD = $(DFB_BASE_LIBS)
dfbtest_surface_updates_SOURCES = dfbtest_surface_updates.c
dfbtest_surface_updates_LDADD = $(DFB_BASE_LIBS)
dfbtest_sync_SOURCES = dfbtest_sync.c
dfbtest_sync_LDADD = $(DFB_BASE_LIBS)
dfbtest_video_SOURCES = dfbtest_video.c
dfbtest_video_LDADD = $(DFB_BASE_LIBS)
dfbtest_waitserial_SOURCES = dfbtest_waitserial.c
dfbtest_waitserial_LDADD = $(DFB_BASE_LIBS)
dfbtest_water_SOURCES = dfbtest_water.c
dfbtest_water_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_SOURCES = dfbtest_window.c
dfbtest_window_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_cursor_SOURCES = dfbtest_window_cursor.c
dfbtest_window_cursor_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_flip_SOURCES = dfbtest_window_flip.c
dfbtest_window_flip_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_flip_once_SOURCES = dfbtest_window_flip_once.c
dfbtest_window_flip_once_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_surface_SOURCES = dfbtest_window_surface.c
dfbtest_window_surface_LDADD = $(DFB_BASE_LIBS)
dfbtest_window_update_SOURCES = dfbtest_window_update.c
dfbtest_window_update_LDADD = $(DFB_BASE_LIBS)
dfbtest_windows_watcher_SOURCES = dfbtest_windows_watcher.c
dfbtest_windows_watcher_LDADD = $(DFB_BASE_LIBS)
direct_stream_SOURCES = direct_stream.c
direct_stream_LDADD = $(libdirect)
direct_test_SOURCES = direct_test.c
direct_test_LDADD = $(libdirect)
fusion_call_SOURCES = fusion_call.c
fusion_call_LDADD = $(DFB_BASE_LIBS)
fusion_call_bench_SOURCES = fusion_call_bench.c
fusion_call_bench_LDADD = $(DFB_BASE_LIBS)
fusion_fork_SOURCES = fusion_fork.c
fusion_fork_LDADD = $(DFB_BASE_LIBS)
fusion_reactor_SOURCES = fusion_reactor.c
fusion_reactor_LDADD = $(DFB_BASE_LIBS)
fusion_skirmish_SOURCES = fusion_skirmish.c
fusion_skirmish_LDADD = $(DFB_BASE_LIBS)
fusion_stream_SOURCES = fusion_stream.c
fusion_stream_LDADD = $(DFB_BASE_LIBS)
OneBench_SOURCES = OneBench.c
OneBench_LDADD = $(DFB_BASE_LIBS)
OneTest_SOURCES = OneTest.c
OneTest_LDADD = $(DFB_BASE_LIBS)
voodoo_bench_SOURCES = voodoo_bench.c
voodoo_bench_LDADD = $(DFB_BASE_LIBS)
voodoo_bench_client_SOURCES = voodoo_bench_client.c
voodoo_bench_client_LDADD = $(DFB_BASE_LIBS)
voodoo_bench_server_SOURCES = voodoo_bench_server.c
voodoo_bench_server_LDADD = $(DFB_BASE_LIBS)
voodoo_bench_client_unix_SOURCES = voodoo_bench_client_unix.c
voodoo_bench_client_unix_LDADD = $(DFB_BASE_LIBS)
voodoo_bench_server_unix_SOURCES = voodoo_bench_server_unix.c
voodoo_bench_server_unix_LDADD = $(DFB_BASE_LIBS)
testman_SOURCES = testman.c
testman_LDADD = $(DFB_BASE_LIBS) $(libsawman)
testrun_SOURCES = testrun.c
testrun_LDADD = $(DFB_BASE_LIBS) $(libsawman)
sample1_SOURCES = sample1.c
sample1_LDADD = $(DFB_BASE_LIBS) $(libsawman)
divine_test_SOURCES = divine_test.c
divine_test_LDADD = $(DFB_BASE_LIBS) $(libdivine)
fdtest_bench_SOURCES = fdtest_bench.c
fdtest_bench_LDADD = $(libfusion) $(libdirect) $(libfusiondale)
fdtest_coma_SOURCES = fdtest_coma.c
fdtest_coma_LDADD = $(libfusion) $(libdirect) $(libfusiondale)
fdtest_init_SOURCES = fdtest_init.c
fdtest_init_LDADD = $(libfusion) $(libdirect) $(libfusiondale)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/rules/libs_deps.make $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/rules/libs_deps.make $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

OneBench$(EXEEXT): $(OneBench_OBJECTS) $(OneBench_DEPENDENCIES) $(EXTRA_OneBench_DEPENDENCIES) 
	@rm -f OneBench$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(OneBench_OBJECTS) $(OneBench_LDADD) $(LIBS)

OneTest$(EXEEXT): $(OneTest_OBJECTS) $(OneTest_DEPENDENCIES) $(EXTRA_OneTest_DEPENDENCIES) 
	@rm -f OneTest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(OneTest_OBJECTS) $(OneTest_LDADD) $(LIBS)

coretest_blit2$(EXEEXT): $(coretest_blit2_OBJECTS) $(coretest_blit2_DEPENDENCIES) $(EXTRA_coretest_blit2_DEPENDENCIES) 
	@rm -f coretest_blit2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(coretest_blit2_OBJECTS) $(coretest_blit2_LDADD) $(LIBS)

coretest_task$(EXEEXT): $(coretest_task_OBJECTS) $(coretest_task_DEPENDENCIES) $(EXTRA_coretest_task_DEPENDENCIES) 
	@rm -f coretest_task$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(coretest_task_OBJECTS) $(coretest_task_LDADD) $(LIBS)

coretest_task_fillrect$(EXEEXT): $(coretest_task_fillrect_OBJECTS) $(coretest_task_fillrect_DEPENDENCIES) $(EXTRA_coretest_task_fillrect_DEPENDENCIES) 
	@rm -f coretest_task_fillrect$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(coretest_task_fillrect_OBJECTS) $(coretest_task_fillrect_LDADD) $(LIBS)

dfbtest_alloc$(EXEEXT): $(dfbtest_alloc_OBJECTS) $(dfbtest_alloc_DEPENDENCIES) $(EXTRA_dfbtest_alloc_DEPENDENCIES) 
	@rm -f dfbtest_alloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_alloc_OBJECTS) $(dfbtest_alloc_LDADD) $(LIBS)

dfbtest_blit$(EXEEXT): $(dfbtest_blit_OBJECTS) $(dfbtest_blit_DEPENDENCIES) $(EXTRA_dfbtest_blit_DEPENDENCIES) 
	@rm -f dfbtest_blit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_blit_OBJECTS) $(dfbtest_blit_LDADD) $(LIBS)

dfbtest_blit2$(EXEEXT): $(dfbtest_blit2_OBJECTS) $(dfbtest_blit2_DEPENDENCIES) $(EXTRA_dfbtest_blit2_DEPENDENCIES) 
	@rm -f dfbtest_blit2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_blit2_OBJECTS) $(dfbtest_blit2_LDADD) $(LIBS)

dfbtest_blit_multi$(EXEEXT): $(dfbtest_blit_multi_OBJECTS) $(dfbtest_blit_multi_DEPENDENCIES) $(EXTRA_dfbtest_blit_multi_DEPENDENCIES) 
	@rm -f dfbtest_blit_multi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_blit_multi_OBJECTS) $(dfbtest_blit_multi_LDADD) $(LIBS)

dfbtest_blit_threads$(EXEEXT): $(dfbtest_blit_threads_OBJECTS) $(dfbtest_blit_threads_DEPENDENCIES) $(EXTRA_dfbtest_blit_threads_DEPENDENCIES) 
	@rm -f dfbtest_blit_threads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_blit_threads_OBJECTS) $(dfbtest_blit_threads_LDADD) $(LIBS)

dfbtest_clipboard$(EXEEXT): $(dfbtest_clipboard_OBJECTS) $(dfbtest_clipboard_DEPENDENCIES) $(EXTRA_dfbtest_clipboard_DEPENDENCIES) 
	@rm -f dfbtest_clipboard$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_clipboard_OBJECTS) $(dfbtest_clipboard_LDADD) $(LIBS)

dfbtest_fillrect$(EXEEXT): $(dfbtest_fillrect_OBJECTS) $(dfbtest_fillrect_DEPENDENCIES) $(EXTRA_dfbtest_fillrect_DEPENDENCIES) 
	@rm -f dfbtest_fillrect$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_fillrect_OBJECTS) $(dfbtest_fillrect_LDADD) $(LIBS)

dfbtest_flip$(EXEEXT): $(dfbtest_flip_OBJECTS) $(dfbtest_flip_DEPENDENCIES) $(EXTRA_dfbtest_flip_DEPENDENCIES) 
	@rm -f dfbtest_flip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_flip_OBJECTS) $(dfbtest_flip_LDADD) $(LIBS)

dfbtest_font$(EXEEXT): $(dfbtest_font_OBJECTS) $(dfbtest_font_DEPENDENCIES) $(EXTRA_dfbtest_font_DEPENDENCIES) 
	@rm -f dfbtest_font$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_font_OBJECTS) $(dfbtest_font_LDADD) $(LIBS)

dfbtest_font_blend$(EXEEXT): $(dfbtest_font_blend_OBJECTS) $(dfbtest_font_blend_DEPENDENCIES) $(EXTRA_dfbtest_font_blend_DEPENDENCIES) 
	@rm -f dfbtest_font_blend$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dfbtest_font_blend_OBJECTS) $(dfbtest_font_blend_LDADD) $(LIBS)

dfbtest_gl1$(EXEEXT): $(dfbtest_gl1_OBJECTS) $(dfbtest_gl1_DEPENDENCIES) $(EXTRA_dfbtest_gl1_DEPENDENCIES) 
	@rm -f dfbtest_gl1$(EXEEXT)
	$(AM_V_CCLD)$(dfbtest_gl1_LINK) $(dfbtest_gl1_OBJECTS) $(dfbtest_gl1_LDADD) $(LIBS)

dfbtest_gl2$(EXEEXT): $(dfbtest_gl2_OBJECTS) $(dfbtest_gl2_DEPENDENCIES) $(EXTRA_dfbtest_gl2_DEPENDENCIES) 
	@rm -f dfbtest_gl2$(EXEEXT)
	$(AM_V_CCLD)$(dfbtest_gl2_LINK) $(dfbtest_gl2_OBJECTS) $(dfbtest_gl2_LDADD) $(LIBS)

dfbtest_gl3$(EXEEXT): $(dfbtest_gl3_OBJECTS) $(dfbtest_gl3_DEPENDENCIES) $(EXTRA_dfbtest_gl3_DEPENDENCIES) 
	@rm -f dfbtest_gl3$(EXEEXT)
	$(AM_V_CCLD)$(dfbtest_gl3_LINK) $(dfbtest_gl3_OBJECTS) $(dfbtest_gl3_LDADD) $(LIBS)

dfbtest_init$(EXEEXT): $(dfbtest_init_OBJECTS) $(dfbtest_init_DEPENDENCIES) $(EXTRA_dfbtest_init_DEPENDENCIES) 
	@rm -f dfbtest_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_init_OBJECTS) $(dfbtest_init_LDADD) $(LIBS)

dfbtest_input$(EXEEXT): $(dfbtest_input_OBJECTS) $(dfbtest_input_DEPENDENCIES) $(EXTRA_dfbtest_input_DEPENDENCIES) 
	@rm -f dfbtest_input$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_input_OBJECTS) $(dfbtest_input_LDADD) $(LIBS)

dfbtest_layer$(EXEEXT): $(dfbtest_layer_OBJECTS) $(dfbtest_layer_DEPENDENCIES) $(EXTRA_dfbtest_layer_DEPENDENCIES) 
	@rm -f dfbtest_layer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_layer_OBJECTS) $(dfbtest_layer_LDADD) $(LIBS)

dfbtest_layers$(EXEEXT): $(dfbtest_layers_OBJECTS) $(dfbtest_layers_DEPENDENCIES) $(EXTRA_dfbtest_layers_DEPENDENCIES) 
	@rm -f dfbtest_layers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_layers_OBJECTS) $(dfbtest_layers_LDADD) $(LIBS)

dfbtest_mirror$(EXEEXT): $(dfbtest_mirror_OBJECTS) $(dfbtest_mirror_DEPENDENCIES) $(EXTRA_dfbtest_mirror_DEPENDENCIES) 
	@rm -f dfbtest_mirror$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_mirror_OBJECTS) $(dfbtest_mirror_LDADD) $(LIBS)

dfbtest_old_gl2$(EXEEXT): $(dfbtest_old_gl2_OBJECTS) $(dfbtest_old_gl2_DEPENDENCIES) $(EXTRA_dfbtest_old_gl2_DEPENDENCIES) 
	@rm -f dfbtest_old_gl2$(EXEEXT)
	$(AM_V_CCLD)$(dfbtest_old_gl2_LINK) $(dfbtest_old_gl2_OBJECTS) $(dfbtest_old_gl2_LDADD) $(LIBS)

dfbtest_prealloc$(EXEEXT): $(dfbtest_prealloc_OBJECTS) $(dfbtest_prealloc_DEPENDENCIES) $(EXTRA_dfbtest_prealloc_DEPENDENCIES) 
	@rm -f dfbtest_prealloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_prealloc_OBJECTS) $(dfbtest_prealloc_LDADD) $(LIBS)

dfbtest_reinit$(EXEEXT): $(dfbtest_reinit_OBJECTS) $(dfbtest_reinit_DEPENDENCIES) $(EXTRA_dfbtest_reinit_DEPENDENCIES) 
	@rm -f dfbtest_reinit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_reinit_OBJECTS) $(dfbtest_reinit_LDADD) $(LIBS)

dfbtest_resize$(EXEEXT): $(dfbtest_resize_OBJECTS) $(dfbtest_resize_DEPENDENCIES) $(EXTRA_dfbtest_resize_DEPENDENCIES) 
	@rm -f dfbtest_resize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_resize_OBJECTS) $(dfbtest_resize_LDADD) $(LIBS)

dfbtest_scale$(EXEEXT): $(dfbtest_scale_OBJECTS) $(dfbtest_scale_DEPENDENCIES) $(EXTRA_dfbtest_scale_DEPENDENCIES) 
	@rm -f dfbtest_scale$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_scale_OBJECTS) $(dfbtest_scale_LDADD) $(LIBS)

dfbtest_scale_nv21$(EXEEXT): $(dfbtest_scale_nv21_OBJECTS) $(dfbtest_scale_nv21_DEPENDENCIES) $(EXTRA_dfbtest_scale_nv21_DEPENDENCIES) 
	@rm -f dfbtest_scale_nv21$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_scale_nv21_OBJECTS) $(dfbtest_scale_nv21_LDADD) $(LIBS)

dfbtest_stereo$(EXEEXT): $(dfbtest_stereo_OBJECTS) $(dfbtest_stereo_DEPENDENCIES) $(EXTRA_dfbtest_stereo_DEPENDENCIES) 
	@rm -f dfbtest_stereo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_stereo_OBJECTS) $(dfbtest_stereo_LDADD) $(LIBS)

dfbtest_stereo_window$(EXEEXT): $(dfbtest_stereo_window_OBJECTS) $(dfbtest_stereo_window_DEPENDENCIES) $(EXTRA_dfbtest_stereo_window_DEPENDENCIES) 
	@rm -f dfbtest_stereo_window$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_stereo_window_OBJECTS) $(dfbtest_stereo_window_LDADD) $(LIBS)

dfbtest_surface_compositor$(EXEEXT): $(dfbtest_surface_compositor_OBJECTS) $(dfbtest_surface_compositor_DEPENDENCIES) $(EXTRA_dfbtest_surface_compositor_DEPENDENCIES) 
	@rm -f dfbtest_surface_compositor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_surface_compositor_OBJECTS) $(dfbtest_surface_compositor_LDADD) $(LIBS)

dfbtest_surface_compositor_threads$(EXEEXT): $(dfbtest_surface_compositor_threads_OBJECTS) $(dfbtest_surface_compositor_threads_DEPENDENCIES) $(EXTRA_dfbtest_surface_compositor_threads_DEPENDENCIES) 
	@rm -f dfbtest_surface_compositor_threads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_surface_compositor_threads_OBJECTS) $(dfbtest_surface_compositor_threads_LDADD) $(LIBS)

dfbtest_surface_updates$(EXEEXT): $(dfbtest_surface_updates_OBJECTS) $(dfbtest_surface_updates_DEPENDENCIES) $(EXTRA_dfbtest_surface_updates_DEPENDENCIES) 
	@rm -f dfbtest_surface_updates$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_surface_updates_OBJECTS) $(dfbtest_surface_updates_LDADD) $(LIBS)

dfbtest_sync$(EXEEXT): $(dfbtest_sync_OBJECTS) $(dfbtest_sync_DEPENDENCIES) $(EXTRA_dfbtest_sync_DEPENDENCIES) 
	@rm -f dfbtest_sync$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_sync_OBJECTS) $(dfbtest_sync_LDADD) $(LIBS)

dfbtest_video$(EXEEXT): $(dfbtest_video_OBJECTS) $(dfbtest_video_DEPENDENCIES) $(EXTRA_dfbtest_video_DEPENDENCIES) 
	@rm -f dfbtest_video$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_video_OBJECTS) $(dfbtest_video_LDADD) $(LIBS)

dfbtest_waitserial$(EXEEXT): $(dfbtest_waitserial_OBJECTS) $(dfbtest_waitserial_DEPENDENCIES) $(EXTRA_dfbtest_waitserial_DEPENDENCIES) 
	@rm -f dfbtest_waitserial$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_waitserial_OBJECTS) $(dfbtest_waitserial_LDADD) $(LIBS)

dfbtest_water$(EXEEXT): $(dfbtest_water_OBJECTS) $(dfbtest_water_DEPENDENCIES) $(EXTRA_dfbtest_water_DEPENDENCIES) 
	@rm -f dfbtest_water$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_water_OBJECTS) $(dfbtest_water_LDADD) $(LIBS)

dfbtest_window$(EXEEXT): $(dfbtest_window_OBJECTS) $(dfbtest_window_DEPENDENCIES) $(EXTRA_dfbtest_window_DEPENDENCIES) 
	@rm -f dfbtest_window$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_OBJECTS) $(dfbtest_window_LDADD) $(LIBS)

dfbtest_window_cursor$(EXEEXT): $(dfbtest_window_cursor_OBJECTS) $(dfbtest_window_cursor_DEPENDENCIES) $(EXTRA_dfbtest_window_cursor_DEPENDENCIES) 
	@rm -f dfbtest_window_cursor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_cursor_OBJECTS) $(dfbtest_window_cursor_LDADD) $(LIBS)

dfbtest_window_flip$(EXEEXT): $(dfbtest_window_flip_OBJECTS) $(dfbtest_window_flip_DEPENDENCIES) $(EXTRA_dfbtest_window_flip_DEPENDENCIES) 
	@rm -f dfbtest_window_flip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_flip_OBJECTS) $(dfbtest_window_flip_LDADD) $(LIBS)

dfbtest_window_flip_once$(EXEEXT): $(dfbtest_window_flip_once_OBJECTS) $(dfbtest_window_flip_once_DEPENDENCIES) $(EXTRA_dfbtest_window_flip_once_DEPENDENCIES) 
	@rm -f dfbtest_window_flip_once$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_flip_once_OBJECTS) $(dfbtest_window_flip_once_LDADD) $(LIBS)

dfbtest_window_surface$(EXEEXT): $(dfbtest_window_surface_OBJECTS) $(dfbtest_window_surface_DEPENDENCIES) $(EXTRA_dfbtest_window_surface_DEPENDENCIES) 
	@rm -f dfbtest_window_surface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_surface_OBJECTS) $(dfbtest_window_surface_LDADD) $(LIBS)

dfbtest_window_update$(EXEEXT): $(dfbtest_window_update_OBJECTS) $(dfbtest_window_update_DEPENDENCIES) $(EXTRA_dfbtest_window_update_DEPENDENCIES) 
	@rm -f dfbtest_window_update$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_window_update_OBJECTS) $(dfbtest_window_update_LDADD) $(LIBS)

dfbtest_windows_watcher$(EXEEXT): $(dfbtest_windows_watcher_OBJECTS) $(dfbtest_windows_watcher_DEPENDENCIES) $(EXTRA_dfbtest_windows_watcher_DEPENDENCIES) 
	@rm -f dfbtest_windows_watcher$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dfbtest_windows_watcher_OBJECTS) $(dfbtest_windows_watcher_LDADD) $(LIBS)

direct_stream$(EXEEXT): $(direct_stream_OBJECTS) $(direct_stream_DEPENDENCIES) $(EXTRA_direct_stream_DEPENDENCIES) 
	@rm -f direct_stream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(direct_stream_OBJECTS) $(direct_stream_LDADD) $(LIBS)

direct_test$(EXEEXT): $(direct_test_OBJECTS) $(direct_test_DEPENDENCIES) $(EXTRA_direct_test_DEPENDENCIES) 
	@rm -f direct_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(direct_test_OBJECTS) $(direct_test_LDADD) $(LIBS)

divine_test$(EXEEXT): $(divine_test_OBJECTS) $(divine_test_DEPENDENCIES) $(EXTRA_divine_test_DEPENDENCIES) 
	@rm -f divine_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(divine_test_OBJECTS) $(divine_test_LDADD) $(LIBS)

fdtest_bench$(EXEEXT): $(fdtest_bench_OBJECTS) $(fdtest_bench_DEPENDENCIES) $(EXTRA_fdtest_bench_DEPENDENCIES) 
	@rm -f fdtest_bench$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fdtest_bench_OBJECTS) $(fdtest_bench_LDADD) $(LIBS)

fdtest_coma$(EXEEXT): $(fdtest_coma_OBJECTS) $(fdtest_coma_DEPENDENCIES) $(EXTRA_fdtest_coma_DEPENDENCIES) 
	@rm -f fdtest_coma$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fdtest_coma_OBJECTS) $(fdtest_coma_LDADD) $(LIBS)

fdtest_init$(EXEEXT): $(fdtest_init_OBJECTS) $(fdtest_init_DEPENDENCIES) $(EXTRA_fdtest_init_DEPENDENCIES) 
	@rm -f fdtest_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fdtest_init_OBJECTS) $(fdtest_init_LDADD) $(LIBS)

fusion_call$(EXEEXT): $(fusion_call_OBJECTS) $(fusion_call_DEPENDENCIES) $(EXTRA_fusion_call_DEPENDENCIES) 
	@rm -f fusion_call$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_call_OBJECTS) $(fusion_call_LDADD) $(LIBS)

fusion_call_bench$(EXEEXT): $(fusion_call_bench_OBJECTS) $(fusion_call_bench_DEPENDENCIES) $(EXTRA_fusion_call_bench_DEPENDENCIES) 
	@rm -f fusion_call_bench$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_call_bench_OBJECTS) $(fusion_call_bench_LDADD) $(LIBS)

fusion_fork$(EXEEXT): $(fusion_fork_OBJECTS) $(fusion_fork_DEPENDENCIES) $(EXTRA_fusion_fork_DEPENDENCIES) 
	@rm -f fusion_fork$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_fork_OBJECTS) $(fusion_fork_LDADD) $(LIBS)

fusion_reactor$(EXEEXT): $(fusion_reactor_OBJECTS) $(fusion_reactor_DEPENDENCIES) $(EXTRA_fusion_reactor_DEPENDENCIES) 
	@rm -f fusion_reactor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_reactor_OBJECTS) $(fusion_reactor_LDADD) $(LIBS)

fusion_skirmish$(EXEEXT): $(fusion_skirmish_OBJECTS) $(fusion_skirmish_DEPENDENCIES) $(EXTRA_fusion_skirmish_DEPENDENCIES) 
	@rm -f fusion_skirmish$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_skirmish_OBJECTS) $(fusion_skirmish_LDADD) $(LIBS)

fusion_stream$(EXEEXT): $(fusion_stream_OBJECTS) $(fusion_stream_DEPENDENCIES) $(EXTRA_fusion_stream_DEPENDENCIES) 
	@rm -f fusion_stream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fusion_stream_OBJECTS) $(fusion_stream_LDADD) $(LIBS)

sample1$(EXEEXT): $(sample1_OBJECTS) $(sample1_DEPENDENCIES) $(EXTRA_sample1_DEPENDENCIES) 
	@rm -f sample1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sample1_OBJECTS) $(sample1_LDADD) $(LIBS)

testman$(EXEEXT): $(testman_OBJECTS) $(testman_DEPENDENCIES) $(EXTRA_testman_DEPENDENCIES) 
	@rm -f testman$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testman_OBJECTS) $(testman_LDADD) $(LIBS)

testrun$(EXEEXT): $(testrun_OBJECTS) $(testrun_DEPENDENCIES) $(EXTRA_testrun_DEPENDENCIES) 
	@rm -f testrun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testrun_OBJECTS) $(testrun_LDADD) $(LIBS)

voodoo_bench$(EXEEXT): $(voodoo_bench_OBJECTS) $(voodoo_bench_DEPENDENCIES) $(EXTRA_voodoo_bench_DEPENDENCIES) 
	@rm -f voodoo_bench$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(voodoo_bench_OBJECTS) $(voodoo_bench_LDADD) $(LIBS)

voodoo_bench_client$(EXEEXT): $(voodoo_bench_client_OBJECTS) $(voodoo_bench_client_DEPENDENCIES) $(EXTRA_voodoo_bench_client_DEPENDENCIES) 
	@rm -f voodoo_bench_client$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(voodoo_bench_client_OBJECTS) $(voodoo_bench_client_LDADD) $(LIBS)

voodoo_bench_client_unix$(EXEEXT): $(voodoo_bench_client_unix_OBJECTS) $(voodoo_bench_client_unix_DEPENDENCIES) $(EXTRA_voodoo_bench_client_unix_DEPENDENCIES) 
	@rm -f voodoo_bench_client_unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(voodoo_bench_client_unix_OBJECTS) $(voodoo_bench_client_unix_LDADD) $(LIBS)

voodoo_bench_server$(EXEEXT): $(voodoo_bench_server_OBJECTS) $(voodoo_bench_server_DEPENDENCIES) $(EXTRA_voodoo_bench_server_DEPENDENCIES) 
	@rm -f voodoo_bench_server$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(voodoo_bench_server_OBJECTS) $(voodoo_bench_server_LDADD) $(LIBS)

voodoo_bench_server_unix$(EXEEXT): $(voodoo_bench_server_unix_OBJECTS) $(voodoo_bench_server_unix_DEPENDENCIES) $(EXTRA_voodoo_bench_server_unix_DEPENDENCIES) 
	@rm -f voodoo_bench_server_unix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(voodoo_bench_server_unix_OBJECTS) $(voodoo_bench_server_unix_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/OneBench.Po
#include ./$(DEPDIR)/OneTest.Po
#include ./$(DEPDIR)/coretest_blit2.Po
#include ./$(DEPDIR)/coretest_task.Po
#include ./$(DEPDIR)/coretest_task_fillrect.Po
#include ./$(DEPDIR)/dfbapp.Po
#include ./$(DEPDIR)/dfbtest_alloc.Po
#include ./$(DEPDIR)/dfbtest_blit.Po
#include ./$(DEPDIR)/dfbtest_blit2.Po
#include ./$(DEPDIR)/dfbtest_blit_multi.Po
#include ./$(DEPDIR)/dfbtest_blit_threads.Po
#include ./$(DEPDIR)/dfbtest_clipboard.Po
#include ./$(DEPDIR)/dfbtest_fillrect.Po
#include ./$(DEPDIR)/dfbtest_flip.Po
#include ./$(DEPDIR)/dfbtest_font.Po
#include ./$(DEPDIR)/dfbtest_font_blend.Po
#include ./$(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Po
#include ./$(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Po
#include ./$(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Po
#include ./$(DEPDIR)/dfbtest_init.Po
#include ./$(DEPDIR)/dfbtest_input.Po
#include ./$(DEPDIR)/dfbtest_layer.Po
#include ./$(DEPDIR)/dfbtest_layers.Po
#include ./$(DEPDIR)/dfbtest_mirror.Po
#include ./$(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Po
#include ./$(DEPDIR)/dfbtest_prealloc.Po
#include ./$(DEPDIR)/dfbtest_reinit.Po
#include ./$(DEPDIR)/dfbtest_resize.Po
#include ./$(DEPDIR)/dfbtest_scale.Po
#include ./$(DEPDIR)/dfbtest_scale_nv21.Po
#include ./$(DEPDIR)/dfbtest_stereo.Po
#include ./$(DEPDIR)/dfbtest_stereo_window.Po
#include ./$(DEPDIR)/dfbtest_surface_compositor.Po
#include ./$(DEPDIR)/dfbtest_surface_compositor_threads.Po
#include ./$(DEPDIR)/dfbtest_surface_updates.Po
#include ./$(DEPDIR)/dfbtest_sync.Po
#include ./$(DEPDIR)/dfbtest_video.Po
#include ./$(DEPDIR)/dfbtest_waitserial.Po
#include ./$(DEPDIR)/dfbtest_water.Po
#include ./$(DEPDIR)/dfbtest_window.Po
#include ./$(DEPDIR)/dfbtest_window_cursor.Po
#include ./$(DEPDIR)/dfbtest_window_flip.Po
#include ./$(DEPDIR)/dfbtest_window_flip_once.Po
#include ./$(DEPDIR)/dfbtest_window_surface.Po
#include ./$(DEPDIR)/dfbtest_window_update.Po
#include ./$(DEPDIR)/dfbtest_windows_watcher.Po
#include ./$(DEPDIR)/direct_stream.Po
#include ./$(DEPDIR)/direct_test.Po
#include ./$(DEPDIR)/divine_test.Po
#include ./$(DEPDIR)/fdtest_bench.Po
#include ./$(DEPDIR)/fdtest_coma.Po
#include ./$(DEPDIR)/fdtest_init.Po
#include ./$(DEPDIR)/fusion_call.Po
#include ./$(DEPDIR)/fusion_call_bench.Po
#include ./$(DEPDIR)/fusion_fork.Po
#include ./$(DEPDIR)/fusion_reactor.Po
#include ./$(DEPDIR)/fusion_skirmish.Po
#include ./$(DEPDIR)/fusion_stream.Po
#include ./$(DEPDIR)/sample1.Po
#include ./$(DEPDIR)/testman.Po
#include ./$(DEPDIR)/testrun.Po
#include ./$(DEPDIR)/voodoo_bench.Po
#include ./$(DEPDIR)/voodoo_bench_client.Po
#include ./$(DEPDIR)/voodoo_bench_client_unix.Po
#include ./$(DEPDIR)/voodoo_bench_server.Po
#include ./$(DEPDIR)/voodoo_bench_server_unix.Po

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

dfbtest_gl1-dfbtest_gl1.o: dfbtest_gl1.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl1_CFLAGS) $(CFLAGS) -MT dfbtest_gl1-dfbtest_gl1.o -MD -MP -MF $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Tpo -c -o dfbtest_gl1-dfbtest_gl1.o `test -f 'dfbtest_gl1.c' || echo '$(srcdir)/'`dfbtest_gl1.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Tpo $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Po
#	$(AM_V_CC)source='dfbtest_gl1.c' object='dfbtest_gl1-dfbtest_gl1.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl1_CFLAGS) $(CFLAGS) -c -o dfbtest_gl1-dfbtest_gl1.o `test -f 'dfbtest_gl1.c' || echo '$(srcdir)/'`dfbtest_gl1.c

dfbtest_gl1-dfbtest_gl1.obj: dfbtest_gl1.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl1_CFLAGS) $(CFLAGS) -MT dfbtest_gl1-dfbtest_gl1.obj -MD -MP -MF $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Tpo -c -o dfbtest_gl1-dfbtest_gl1.obj `if test -f 'dfbtest_gl1.c'; then $(CYGPATH_W) 'dfbtest_gl1.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl1.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Tpo $(DEPDIR)/dfbtest_gl1-dfbtest_gl1.Po
#	$(AM_V_CC)source='dfbtest_gl1.c' object='dfbtest_gl1-dfbtest_gl1.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl1_CFLAGS) $(CFLAGS) -c -o dfbtest_gl1-dfbtest_gl1.obj `if test -f 'dfbtest_gl1.c'; then $(CYGPATH_W) 'dfbtest_gl1.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl1.c'; fi`

dfbtest_gl2-dfbtest_gl2.o: dfbtest_gl2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl2_CFLAGS) $(CFLAGS) -MT dfbtest_gl2-dfbtest_gl2.o -MD -MP -MF $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Tpo -c -o dfbtest_gl2-dfbtest_gl2.o `test -f 'dfbtest_gl2.c' || echo '$(srcdir)/'`dfbtest_gl2.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Tpo $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Po
#	$(AM_V_CC)source='dfbtest_gl2.c' object='dfbtest_gl2-dfbtest_gl2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl2_CFLAGS) $(CFLAGS) -c -o dfbtest_gl2-dfbtest_gl2.o `test -f 'dfbtest_gl2.c' || echo '$(srcdir)/'`dfbtest_gl2.c

dfbtest_gl2-dfbtest_gl2.obj: dfbtest_gl2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl2_CFLAGS) $(CFLAGS) -MT dfbtest_gl2-dfbtest_gl2.obj -MD -MP -MF $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Tpo -c -o dfbtest_gl2-dfbtest_gl2.obj `if test -f 'dfbtest_gl2.c'; then $(CYGPATH_W) 'dfbtest_gl2.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl2.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Tpo $(DEPDIR)/dfbtest_gl2-dfbtest_gl2.Po
#	$(AM_V_CC)source='dfbtest_gl2.c' object='dfbtest_gl2-dfbtest_gl2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl2_CFLAGS) $(CFLAGS) -c -o dfbtest_gl2-dfbtest_gl2.obj `if test -f 'dfbtest_gl2.c'; then $(CYGPATH_W) 'dfbtest_gl2.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl2.c'; fi`

dfbtest_gl3-dfbtest_gl3.o: dfbtest_gl3.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl3_CFLAGS) $(CFLAGS) -MT dfbtest_gl3-dfbtest_gl3.o -MD -MP -MF $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Tpo -c -o dfbtest_gl3-dfbtest_gl3.o `test -f 'dfbtest_gl3.c' || echo '$(srcdir)/'`dfbtest_gl3.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Tpo $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Po
#	$(AM_V_CC)source='dfbtest_gl3.c' object='dfbtest_gl3-dfbtest_gl3.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl3_CFLAGS) $(CFLAGS) -c -o dfbtest_gl3-dfbtest_gl3.o `test -f 'dfbtest_gl3.c' || echo '$(srcdir)/'`dfbtest_gl3.c

dfbtest_gl3-dfbtest_gl3.obj: dfbtest_gl3.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl3_CFLAGS) $(CFLAGS) -MT dfbtest_gl3-dfbtest_gl3.obj -MD -MP -MF $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Tpo -c -o dfbtest_gl3-dfbtest_gl3.obj `if test -f 'dfbtest_gl3.c'; then $(CYGPATH_W) 'dfbtest_gl3.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl3.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Tpo $(DEPDIR)/dfbtest_gl3-dfbtest_gl3.Po
#	$(AM_V_CC)source='dfbtest_gl3.c' object='dfbtest_gl3-dfbtest_gl3.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_gl3_CFLAGS) $(CFLAGS) -c -o dfbtest_gl3-dfbtest_gl3.obj `if test -f 'dfbtest_gl3.c'; then $(CYGPATH_W) 'dfbtest_gl3.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_gl3.c'; fi`

dfbtest_old_gl2-dfbtest_old_gl2.o: dfbtest_old_gl2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_old_gl2_CFLAGS) $(CFLAGS) -MT dfbtest_old_gl2-dfbtest_old_gl2.o -MD -MP -MF $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Tpo -c -o dfbtest_old_gl2-dfbtest_old_gl2.o `test -f 'dfbtest_old_gl2.c' || echo '$(srcdir)/'`dfbtest_old_gl2.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Tpo $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Po
#	$(AM_V_CC)source='dfbtest_old_gl2.c' object='dfbtest_old_gl2-dfbtest_old_gl2.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_old_gl2_CFLAGS) $(CFLAGS) -c -o dfbtest_old_gl2-dfbtest_old_gl2.o `test -f 'dfbtest_old_gl2.c' || echo '$(srcdir)/'`dfbtest_old_gl2.c

dfbtest_old_gl2-dfbtest_old_gl2.obj: dfbtest_old_gl2.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_old_gl2_CFLAGS) $(CFLAGS) -MT dfbtest_old_gl2-dfbtest_old_gl2.obj -MD -MP -MF $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Tpo -c -o dfbtest_old_gl2-dfbtest_old_gl2.obj `if test -f 'dfbtest_old_gl2.c'; then $(CYGPATH_W) 'dfbtest_old_gl2.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_old_gl2.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Tpo $(DEPDIR)/dfbtest_old_gl2-dfbtest_old_gl2.Po
#	$(AM_V_CC)source='dfbtest_old_gl2.c' object='dfbtest_old_gl2-dfbtest_old_gl2.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dfbtest_old_gl2_CFLAGS) $(CFLAGS) -c -o dfbtest_old_gl2-dfbtest_old_gl2.obj `if test -f 'dfbtest_old_gl2.c'; then $(CYGPATH_W) 'dfbtest_old_gl2.c'; else $(CYGPATH_W) '$(srcdir)/dfbtest_old_gl2.c'; fi`

.cpp.o:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
#	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

dfbapp.o: ../examples/++dfb/dfbapp.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dfbapp.o -MD -MP -MF $(DEPDIR)/dfbapp.Tpo -c -o dfbapp.o `test -f '../examples/++dfb/dfbapp.cpp' || echo '$(srcdir)/'`../examples/++dfb/dfbapp.cpp
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbapp.Tpo $(DEPDIR)/dfbapp.Po
#	$(AM_V_CXX)source='../examples/++dfb/dfbapp.cpp' object='dfbapp.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dfbapp.o `test -f '../examples/++dfb/dfbapp.cpp' || echo '$(srcdir)/'`../examples/++dfb/dfbapp.cpp

dfbapp.obj: ../examples/++dfb/dfbapp.cpp
#	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dfbapp.obj -MD -MP -MF $(DEPDIR)/dfbapp.Tpo -c -o dfbapp.obj `if test -f '../examples/++dfb/dfbapp.cpp'; then $(CYGPATH_W) '../examples/++dfb/dfbapp.cpp'; else $(CYGPATH_W) '$(srcdir)/../examples/++dfb/dfbapp.cpp'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/dfbapp.Tpo $(DEPDIR)/dfbapp.Po
#	$(AM_V_CXX)source='../examples/++dfb/dfbapp.cpp' object='dfbapp.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dfbapp.obj `if test -f '../examples/++dfb/dfbapp.cpp'; then $(CYGPATH_W) '../examples/++dfb/dfbapp.cpp'; else $(CYGPATH_W) '$(srcdir)/../examples/++dfb/dfbapp.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
