# Makefile.in generated by automake 1.15 from Makefile.am.
# proxy/requestor/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/DirectFB
pkgincludedir = $(includedir)/DirectFB
pkglibdir = $(libdir)/DirectFB
pkglibexecdir = $(libexecdir)/DirectFB
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabihf
target_triplet = arm-buildroot-linux-gnueabihf
subdir = proxy/requestor
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(icomadir)" \
	"$(DESTDIR)$(icomacomponentdir)" "$(DESTDIR)$(idirectfbdir)" \
	"$(DESTDIR)$(idirectfbdatabufferdir)" \
	"$(DESTDIR)$(idirectfbdisplaylayerdir)" \
	"$(DESTDIR)$(idirectfbeventbufferdir)" \
	"$(DESTDIR)$(idirectfbfontdir)" \
	"$(DESTDIR)$(idirectfbimageproviderdir)" \
	"$(DESTDIR)$(idirectfbinputdevicedir)" \
	"$(DESTDIR)$(idirectfbpalettedir)" \
	"$(DESTDIR)$(idirectfbscreendir)" \
	"$(DESTDIR)$(idirectfbsurfacedir)" \
	"$(DESTDIR)$(idirectfbwindowdir)" "$(DESTDIR)$(idivinedir)" \
	"$(DESTDIR)$(ifusiondaledir)" "$(DESTDIR)$(ifusionsounddir)" \
	"$(DESTDIR)$(ifusionsoundbufferdir)" \
	"$(DESTDIR)$(ifusionsoundplaybackdir)" \
	"$(DESTDIR)$(ifusionsoundstreamdir)" "$(DESTDIR)$(icomadir)" \
	"$(DESTDIR)$(icomacomponentdir)" "$(DESTDIR)$(idirectfbdir)" \
	"$(DESTDIR)$(idirectfbdatabufferdir)" \
	"$(DESTDIR)$(idirectfbdisplaylayerdir)" \
	"$(DESTDIR)$(idirectfbeventbufferdir)" \
	"$(DESTDIR)$(idirectfbfontdir)" \
	"$(DESTDIR)$(idirectfbimageproviderdir)" \
	"$(DESTDIR)$(idirectfbinputdevicedir)" \
	"$(DESTDIR)$(idirectfbpalettedir)" \
	"$(DESTDIR)$(idirectfbscreendir)" \
	"$(DESTDIR)$(idirectfbsurfacedir)" \
	"$(DESTDIR)$(idirectfbwindowdir)" "$(DESTDIR)$(idivinedir)" \
	"$(DESTDIR)$(ifusiondaledir)" "$(DESTDIR)$(ifusionsounddir)" \
	"$(DESTDIR)$(ifusionsoundbufferdir)" \
	"$(DESTDIR)$(ifusionsoundplaybackdir)" \
	"$(DESTDIR)$(ifusionsoundstreamdir)"
LTLIBRARIES = $(icoma_LTLIBRARIES) $(icomacomponent_LTLIBRARIES) \
	$(idirectfb_LTLIBRARIES) $(idirectfbdatabuffer_LTLIBRARIES) \
	$(idirectfbdisplaylayer_LTLIBRARIES) \
	$(idirectfbeventbuffer_LTLIBRARIES) \
	$(idirectfbfont_LTLIBRARIES) \
	$(idirectfbimageprovider_LTLIBRARIES) \
	$(idirectfbinputdevice_LTLIBRARIES) \
	$(idirectfbpalette_LTLIBRARIES) $(idirectfbscreen_LTLIBRARIES) \
	$(idirectfbsurface_LTLIBRARIES) $(idirectfbwindow_LTLIBRARIES) \
	$(idivine_LTLIBRARIES) $(ifusiondale_LTLIBRARIES) \
	$(ifusionsound_LTLIBRARIES) $(ifusionsoundbuffer_LTLIBRARIES) \
	$(ifusionsoundplayback_LTLIBRARIES) \
	$(ifusionsoundstream_LTLIBRARIES)
libicoma_requestor_la_DEPENDENCIES = $(LIBS)
am_libicoma_requestor_la_OBJECTS = icoma_requestor.lo
libicoma_requestor_la_OBJECTS = $(am_libicoma_requestor_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libicoma_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libicoma_requestor_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libicoma_requestor_la_rpath = -rpath \
#	$(icomadir)
libicomacomponent_requestor_la_DEPENDENCIES = $(LIBS)
am_libicomacomponent_requestor_la_OBJECTS =  \
	icomacomponent_requestor.lo
libicomacomponent_requestor_la_OBJECTS =  \
	$(am_libicomacomponent_requestor_la_OBJECTS)
libicomacomponent_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libicomacomponent_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libicomacomponent_requestor_la_rpath =  \
#	-rpath $(icomacomponentdir)
libidirectfb_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfb_requestor_la_OBJECTS = idirectfb_requestor.lo
libidirectfb_requestor_la_OBJECTS =  \
	$(am_libidirectfb_requestor_la_OBJECTS)
libidirectfb_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libidirectfb_requestor_la_LDFLAGS) \
	$(LDFLAGS) -o $@
libidirectfbdatabuffer_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbdatabuffer_requestor_la_OBJECTS =  \
	idirectfbdatabuffer_requestor.lo
libidirectfbdatabuffer_requestor_la_OBJECTS =  \
	$(am_libidirectfbdatabuffer_requestor_la_OBJECTS)
libidirectfbdatabuffer_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbdatabuffer_requestor_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libidirectfbdisplaylayer_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbdisplaylayer_requestor_la_OBJECTS =  \
	idirectfbdisplaylayer_requestor.lo
libidirectfbdisplaylayer_requestor_la_OBJECTS =  \
	$(am_libidirectfbdisplaylayer_requestor_la_OBJECTS)
libidirectfbdisplaylayer_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbdisplaylayer_requestor_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libidirectfbeventbuffer_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbeventbuffer_requestor_la_OBJECTS =  \
	idirectfbeventbuffer_requestor.lo
libidirectfbeventbuffer_requestor_la_OBJECTS =  \
	$(am_libidirectfbeventbuffer_requestor_la_OBJECTS)
libidirectfbeventbuffer_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbeventbuffer_requestor_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libidirectfbfont_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbfont_requestor_la_OBJECTS = idirectfbfont_requestor.lo
libidirectfbfont_requestor_la_OBJECTS =  \
	$(am_libidirectfbfont_requestor_la_OBJECTS)
libidirectfbfont_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbfont_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
libidirectfbimageprovider_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbimageprovider_requestor_la_OBJECTS =  \
	idirectfbimageprovider_requestor.lo
libidirectfbimageprovider_requestor_la_OBJECTS =  \
	$(am_libidirectfbimageprovider_requestor_la_OBJECTS)
libidirectfbimageprovider_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbimageprovider_requestor_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libidirectfbinputdevice_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbinputdevice_requestor_la_OBJECTS =  \
	idirectfbinputdevice_requestor.lo
libidirectfbinputdevice_requestor_la_OBJECTS =  \
	$(am_libidirectfbinputdevice_requestor_la_OBJECTS)
libidirectfbinputdevice_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbinputdevice_requestor_la_LDFLAGS) $(LDFLAGS) -o \
	$@
libidirectfbpalette_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbpalette_requestor_la_OBJECTS =  \
	idirectfbpalette_requestor.lo
libidirectfbpalette_requestor_la_OBJECTS =  \
	$(am_libidirectfbpalette_requestor_la_OBJECTS)
libidirectfbpalette_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbpalette_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
libidirectfbscreen_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbscreen_requestor_la_OBJECTS =  \
	idirectfbscreen_requestor.lo
libidirectfbscreen_requestor_la_OBJECTS =  \
	$(am_libidirectfbscreen_requestor_la_OBJECTS)
libidirectfbscreen_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbscreen_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
libidirectfbsurface_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbsurface_requestor_la_OBJECTS =  \
	idirectfbsurface_requestor.lo
libidirectfbsurface_requestor_la_OBJECTS =  \
	$(am_libidirectfbsurface_requestor_la_OBJECTS)
libidirectfbsurface_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbsurface_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
libidirectfbwindow_requestor_la_DEPENDENCIES = $(LIBS)
am_libidirectfbwindow_requestor_la_OBJECTS =  \
	idirectfbwindow_requestor.lo
libidirectfbwindow_requestor_la_OBJECTS =  \
	$(am_libidirectfbwindow_requestor_la_OBJECTS)
libidirectfbwindow_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libidirectfbwindow_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
libidivine_requestor_la_DEPENDENCIES = $(LIBS)
am_libidivine_requestor_la_OBJECTS = idivine_requestor.lo
libidivine_requestor_la_OBJECTS =  \
	$(am_libidivine_requestor_la_OBJECTS)
libidivine_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libidivine_requestor_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libidivine_requestor_la_rpath = -rpath \
	$(idivinedir)
libifusiondale_requestor_la_DEPENDENCIES = $(LIBS)
am_libifusiondale_requestor_la_OBJECTS = ifusiondale_requestor.lo
libifusiondale_requestor_la_OBJECTS =  \
	$(am_libifusiondale_requestor_la_OBJECTS)
libifusiondale_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libifusiondale_requestor_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libifusiondale_requestor_la_rpath = -rpath \
#	$(ifusiondaledir)
libifusionsound_requestor_la_DEPENDENCIES = $(LIBS)
am_libifusionsound_requestor_la_OBJECTS = ifusionsound_requestor.lo
libifusionsound_requestor_la_OBJECTS =  \
	$(am_libifusionsound_requestor_la_OBJECTS)
libifusionsound_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libifusionsound_requestor_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libifusionsound_requestor_la_rpath =  \
#	-rpath $(ifusionsounddir)
libifusionsoundbuffer_requestor_la_DEPENDENCIES = $(LIBS) \
	../compressor/libfusionsound_compressor.la
am_libifusionsoundbuffer_requestor_la_OBJECTS =  \
	ifusionsoundbuffer_requestor.lo
libifusionsoundbuffer_requestor_la_OBJECTS =  \
	$(am_libifusionsoundbuffer_requestor_la_OBJECTS)
libifusionsoundbuffer_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libifusionsoundbuffer_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libifusionsoundbuffer_requestor_la_rpath =  \
#	-rpath $(ifusionsoundbufferdir)
libifusionsoundplayback_requestor_la_DEPENDENCIES = $(LIBS)
am_libifusionsoundplayback_requestor_la_OBJECTS =  \
	ifusionsoundplayback_requestor.lo
libifusionsoundplayback_requestor_la_OBJECTS =  \
	$(am_libifusionsoundplayback_requestor_la_OBJECTS)
libifusionsoundplayback_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libifusionsoundplayback_requestor_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_libifusionsoundplayback_requestor_la_rpath =  \
#	-rpath $(ifusionsoundplaybackdir)
libifusionsoundstream_requestor_la_DEPENDENCIES = $(LIBS) \
	../compressor/libfusionsound_compressor.la
am_libifusionsoundstream_requestor_la_OBJECTS =  \
	ifusionsoundstream_requestor.lo
libifusionsoundstream_requestor_la_OBJECTS =  \
	$(am_libifusionsoundstream_requestor_la_OBJECTS)
libifusionsoundstream_requestor_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libifusionsoundstream_requestor_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libifusionsoundstream_requestor_la_rpath =  \
#	-rpath $(ifusionsoundstreamdir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libicoma_requestor_la_SOURCES) \
	$(libicomacomponent_requestor_la_SOURCES) \
	$(libidirectfb_requestor_la_SOURCES) \
	$(libidirectfbdatabuffer_requestor_la_SOURCES) \
	$(libidirectfbdisplaylayer_requestor_la_SOURCES) \
	$(libidirectfbeventbuffer_requestor_la_SOURCES) \
	$(libidirectfbfont_requestor_la_SOURCES) \
	$(libidirectfbimageprovider_requestor_la_SOURCES) \
	$(libidirectfbinputdevice_requestor_la_SOURCES) \
	$(libidirectfbpalette_requestor_la_SOURCES) \
	$(libidirectfbscreen_requestor_la_SOURCES) \
	$(libidirectfbsurface_requestor_la_SOURCES) \
	$(libidirectfbwindow_requestor_la_SOURCES) \
	$(libidivine_requestor_la_SOURCES) \
	$(libifusiondale_requestor_la_SOURCES) \
	$(libifusionsound_requestor_la_SOURCES) \
	$(libifusionsoundbuffer_requestor_la_SOURCES) \
	$(libifusionsoundplayback_requestor_la_SOURCES) \
	$(libifusionsoundstream_requestor_la_SOURCES)
DIST_SOURCES = $(libicoma_requestor_la_SOURCES) \
	$(libicomacomponent_requestor_la_SOURCES) \
	$(libidirectfb_requestor_la_SOURCES) \
	$(libidirectfbdatabuffer_requestor_la_SOURCES) \
	$(libidirectfbdisplaylayer_requestor_la_SOURCES) \
	$(libidirectfbeventbuffer_requestor_la_SOURCES) \
	$(libidirectfbfont_requestor_la_SOURCES) \
	$(libidirectfbimageprovider_requestor_la_SOURCES) \
	$(libidirectfbinputdevice_requestor_la_SOURCES) \
	$(libidirectfbpalette_requestor_la_SOURCES) \
	$(libidirectfbscreen_requestor_la_SOURCES) \
	$(libidirectfbsurface_requestor_la_SOURCES) \
	$(libidirectfbwindow_requestor_la_SOURCES) \
	$(libidivine_requestor_la_SOURCES) \
	$(libifusiondale_requestor_la_SOURCES) \
	$(libifusionsound_requestor_la_SOURCES) \
	$(libifusionsoundbuffer_requestor_la_SOURCES) \
	$(libifusionsoundplayback_requestor_la_SOURCES) \
	$(libifusionsoundstream_requestor_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(icoma_DATA) $(icomacomponent_DATA) $(idirectfb_DATA) \
	$(idirectfbdatabuffer_DATA) $(idirectfbdisplaylayer_DATA) \
	$(idirectfbeventbuffer_DATA) $(idirectfbfont_DATA) \
	$(idirectfbimageprovider_DATA) $(idirectfbinputdevice_DATA) \
	$(idirectfbpalette_DATA) $(idirectfbscreen_DATA) \
	$(idirectfbsurface_DATA) $(idirectfbwindow_DATA) \
	$(idivine_DATA) $(ifusiondale_DATA) $(ifusionsound_DATA) \
	$(ifusionsoundbuffer_DATA) $(ifusionsoundplayback_DATA) \
	$(ifusionsoundstream_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/rules/libobject.make
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing aclocal-1.15 
ALSA_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/alsa  
ALSA_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lasound  
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ar
AS = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-as
ASFLAGS = 
AUTOCONF = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing autoconf
AUTOHEADER = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing autoheader
AUTOMAKE = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing automake-1.15
AVIFILE_CFLAGS = 
AVIFILE_CONFIG = 
AVIFILE_LIBS = 
AWK = mawk
CC = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-gcc
CCAS = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-gcc
CCASDEPMODE = depmode=none
CCASFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os 
CCDEPMODE = depmode=none
CDDB_CFLAGS = 
CDDB_LIBS = 
CFLAGS = -Wall -Wstrict-prototypes -Wmissing-prototypes -Wno-strict-aliasing -Werror-implicit-function-declaration -O3 -g2 -ffast-math -pipe -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_GNU_SOURCE  -finstrument-functions -std=gnu99 -Werror-implicit-function-declaration
CPP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-cpp
CPPFLAGS = -D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/cairo
CXX = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-g++
CXXCPP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -Wall -Wno-strict-aliasing -std=c++0x -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -O3 -g2 -ffast-math -pipe -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -D_GNU_SOURCE  -finstrument-functions
CXXSTD = c++0x
CYGPATH_W = echo
DATADIR = ${datarootdir}/directfb-1.7.7
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEP_ONE = 
DEP_VOODOO = 
DFB_CFLAGS_OMIT_FRAME_POINTER = -fomit-frame-pointer
DFB_INTERNAL_CFLAGS = -D_GNU_SOURCE  -finstrument-functions
DFB_LDFLAGS =  -lz
DFB_SMOOTH_SCALING = 
DIRECTFB_BINARY_AGE = 0
DIRECTFB_BUILD_ONE = 0
DIRECTFB_BUILD_PURE_VOODOO = 0
DIRECTFB_BUILD_VOODOO = 0
DIRECTFB_CSOURCE = 
DIRECTFB_INTERFACE_AGE = 0
DIRECTFB_MAJOR_VERSION = 1
DIRECTFB_MICRO_VERSION = 7
DIRECTFB_MINOR_VERSION = 7
DIRECTFB_VERSION = 1.7.7
DIRECTFB_VERSION_VENDOR = 
DIRECT_BUILD_DEBUG = 0
DIRECT_BUILD_DEBUGS = 1
DIRECT_BUILD_DYNLOAD = 1
DIRECT_BUILD_GCC_ATOMICS = 0
DIRECT_BUILD_GETTID = 1
DIRECT_BUILD_MULTICORE = 1
DIRECT_BUILD_NETWORK = 1
DIRECT_BUILD_OSTYPE = DIRECT_OS_LINUX_GNU_LIBC
DIRECT_BUILD_STDBOOL = 1
DIRECT_BUILD_TEXT = 1
DIRECT_BUILD_TRACE = 1
DLLTOOL = false
DRMKMS_CFLAGS = 
DRMKMS_LIBS = 
DSYMUTIL = 
DUMPBIN = 
DYNLIB = -ldl
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FFMPEG_CFLAGS = 
FFMPEG_LIBS = 
FGREP = /bin/grep -F
FLASH_LIBS = 
FLUXCOMP = 
FLUXED_ARGS_BYTES = 1024
FREETYPE_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
FREETYPE_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lfreetype  
FREETYPE_PROVIDER = 
FS_MAX_CHANNELS = 6
FUSION_BUILD_KERNEL = 0
FUSION_BUILD_MULTI = 0
FUSION_MESSAGE_SIZE = 16384
GENERIC_INCLUDEDIR = ${prefix}/include
GIF_PROVIDER = 
GLES2_CFLAGS = 
GLES2_LIBS = 
GL_LIBS = 
GP2D_CFLAGS = 
GP2D_LIBS = 
GREP = /bin/grep
GSTREAMER_INCL = 
GSTREAMER_LIBS = 
HAVE_LINUX = 
IMLIB2_CFLAGS = 
IMLIB2_CONFIG = 
IMLIB2_LIBS = 
INCLUDEDIR = ${prefix}/include/directfb
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTERNALINCLUDEDIR = ${prefix}/include/directfb-internal
JASPER_LIBS = 
JPEG_PROVIDER = 
LD = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ld
LDFLAGS = 
LIBJPEG = -ljpeg
LIBM = -lm
LIBMNG = 
LIBMPEG3_LIBS = 
LIBOBJS = 
LIBPNG_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/libpng16 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBPNG_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lpng16 -lz  
LIBS = \
	$(top_builddir)/lib/voodoo/libvoodoo.la	\
	$(top_builddir)/lib/direct/libdirect.la

LIBTIFF_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBTIFF_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -ltiff  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBWEBP_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include  
LIBWEBP_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lwebp  
LINOTYPE_CFLAGS = 
LINOTYPE_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_BINARY = 7
LT_CURRENT = 7
LT_RELEASE = 1.7
LT_REVISION = 0
LT_SYS_LIBRARY_PATH = 
MAD_LIBS = 
MAINT = #
MAKEINFO = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/missing makeinfo
MAN2HTML = no
MANIFEST_TOOL = :
MESA_CFLAGS = 
MESA_LIBS = 
MKDIR_P = /bin/mkdir -p
MNG_PROVIDER = 
MODULEDIR = ${exec_prefix}/lib/directfb-1.7-7
MODULEDIRNAME = directfb-1.7-7
NM = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-nm
NMEDIT = 
OBJDUMP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-objdump
OBJEXT = o
OPENQUICKTIME_LIBS = 
OSX_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = DirectFB
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PNG_PROVIDER = 
PVR2D_CFLAGS = 
PVR2D_LIBS = 
RANLIB = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-ranlib
RTLIB = -lrt
RUNTIME_SYSROOT = 
SDL_CFLAGS = 
SDL_LIBS = 
SED = /bin/sed
SET_MAKE = 
SH772X_DEP_CFLAGS = 
SH772X_DEP_LIBS = 
SH772X_SHJPEG_DEP_CFLAGS = 
SH772X_SHJPEG_DEP_LIBS = 
SHELL = /bin/bash
SOPATH = ${exec_prefix}/lib/libdirectfb-1.7.so.7
STRIP = /home/dean/sunxi-v3s/buildroot-2017.08/output/host/bin/arm-linux-gnueabihf-strip
SVG_CFLAGS = -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/cairo -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/pixman-1 -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2  -I/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/include/libpng16  
SVG_LIBS = -L/home/dean/sunxi-v3s/buildroot-2017.08/output/host/arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lsvg-cairo -lsvg -lpng -ljpeg -lz -lcairo  
SWFDEC_CFLAGS = 
SWFDEC_LIBS = 
SYSCONFDIR = /etc
THREADFLAGS = -D_REENTRANT
THREADLIB = -lpthread
TIMIDITY_CFLAGS = 
TIMIDITY_LIBS = 
TSLIB_CFLAGS = 
TSLIB_LIBS = 
VERSION = 1.7.7
VNC_CFLAGS = 
VNC_CONFIG = 
VNC_LIBS = 
VOODOO_BUILD_NO_SETSOCKOPT = 0
VORBISFILE_CFLAGS = 
VORBISFILE_LIBS = 
X11VDPAU_CFLAGS = 
X11VDPAU_LIBS = 
X11_CFLAGS = 
X11_LIBS = 
XINE_CFLAGS = 
XINE_CONFIG = 
XINE_LIBS = 
XINE_PLUGINDIR = 
XINE_VDPAU_CFLAGS = 
XINE_VDPAU_LIBS = 
XINE_VDPAU_PLUGINDIR = 
ZLIB_LIBS = -lz
abs_builddir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/proxy/requestor
abs_srcdir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/proxy/requestor
abs_top_builddir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7
abs_top_srcdir = /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = /usr
host = arm-buildroot-linux-gnueabihf
host_alias = arm-buildroot-linux-gnueabihf
host_cpu = arm
host_os = linux-gnueabihf
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dean/sunxi-v3s/buildroot-2017.08/output/build/directfb-1.7.7/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target = arm-buildroot-linux-gnueabihf
target_alias = arm-buildroot-linux-gnueabihf
target_cpu = arm
target_os = linux-gnueabihf
target_vendor = buildroot
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INTERFACES_DIR = $(MODULEDIR)/interfaces
idirectfbdir = $(INTERFACES_DIR)/IDirectFB
idirectfbdatabufferdir = $(INTERFACES_DIR)/IDirectFBDataBuffer
idirectfbdisplaylayerdir = $(INTERFACES_DIR)/IDirectFBDisplayLayer
idirectfbeventbufferdir = $(INTERFACES_DIR)/IDirectFBEventBuffer
idirectfbfontdir = $(INTERFACES_DIR)/IDirectFBFont
idirectfbimageproviderdir = $(INTERFACES_DIR)/IDirectFBImageProvider
idirectfbinputdevicedir = $(INTERFACES_DIR)/IDirectFBInputDevice
idirectfbpalettedir = $(INTERFACES_DIR)/IDirectFBPalette
idirectfbscreendir = $(INTERFACES_DIR)/IDirectFBScreen
idirectfbsurfacedir = $(INTERFACES_DIR)/IDirectFBSurface
idirectfbwindowdir = $(INTERFACES_DIR)/IDirectFBWindow
idirectfbvideoproviderdir = $(INTERFACES_DIR)/IDirectFBVideoProvider
ifusiondaledir = $(INTERFACES_DIR)/IFusionDale
icomadir = $(INTERFACES_DIR)/IComa
icomacomponentdir = $(INTERFACES_DIR)/IComaComponent
ifusionsounddir = $(INTERFACES_DIR)/IFusionSound
ifusionsoundstreamdir = $(INTERFACES_DIR)/IFusionSoundStream
ifusionsoundbufferdir = $(INTERFACES_DIR)/IFusionSoundBuffer
ifusionsoundplaybackdir = $(INTERFACES_DIR)/IFusionSoundPlayback
idivinedir = $(INTERFACES_DIR)/IDiVine
INCLUDES = \
	-I$(top_builddir)/include		\
	-I$(top_builddir)/lib			\
	-I$(top_builddir)/lib/divine		\
	-I$(top_builddir)/lib/fusiondale	\
	-I$(top_builddir)/lib/fusionsound	\
	-I$(top_srcdir)/include			\
	-I$(top_srcdir)/lib			\
	-I$(top_srcdir)/lib/divine		\
	-I$(top_srcdir)/lib/fusiondale		\
	-I$(top_srcdir)/lib/fusionsound		\
	-I$(top_srcdir)/src 			\
	-I$(top_srcdir)/proxy/dispatcher	\
	-I$(top_srcdir)/proxy/compressor	\
	-DDATADIR=\"${RUNTIME_SYSROOT}${datarootdir}/directfb-1.7.7\"

idirectfb_LTLIBRARIES = \
	libidirectfb_requestor.la

idirectfbdatabuffer_LTLIBRARIES = \
	libidirectfbdatabuffer_requestor.la

idirectfbdisplaylayer_LTLIBRARIES = \
	libidirectfbdisplaylayer_requestor.la

idirectfbeventbuffer_LTLIBRARIES = \
	libidirectfbeventbuffer_requestor.la

idirectfbfont_LTLIBRARIES = \
	libidirectfbfont_requestor.la

idirectfbimageprovider_LTLIBRARIES = \
	libidirectfbimageprovider_requestor.la

idirectfbinputdevice_LTLIBRARIES = \
	libidirectfbinputdevice_requestor.la

idirectfbpalette_LTLIBRARIES = \
	libidirectfbpalette_requestor.la

idirectfbscreen_LTLIBRARIES = \
	libidirectfbscreen_requestor.la

idirectfbsurface_LTLIBRARIES = \
	libidirectfbsurface_requestor.la

idirectfbwindow_LTLIBRARIES = \
	libidirectfbwindow_requestor.la

#ifusiondale_LTLIBRARIES = \
#	libifusiondale_requestor.la

#icoma_LTLIBRARIES = \
#	libicoma_requestor.la

#icomacomponent_LTLIBRARIES = \
#	libicomacomponent_requestor.la

#ifusionsound_LTLIBRARIES = \
#	libifusionsound_requestor.la

#ifusionsoundstream_LTLIBRARIES = \
#	libifusionsoundstream_requestor.la

#ifusionsoundbuffer_LTLIBRARIES = \
#	libifusionsoundbuffer_requestor.la

#ifusionsoundplayback_LTLIBRARIES = \
#	libifusionsoundplayback_requestor.la

idivine_LTLIBRARIES = \
	libidivine_requestor.la

#idirectfb_DATA = libidirectfb_requestor.o
#idirectfbdatabuffer_DATA = libidirectfbdatabuffer_requestor.o
#idirectfbdisplaylayer_DATA = libidirectfbdisplaylayer_requestor.o
#idirectfbeventbuffer_DATA = libidirectfbeventbuffer_requestor.o
#idirectfbfont_DATA = libidirectfbfont_requestor.o
#idirectfbimageprovider_DATA = libidirectfbimageprovider_requestor.o
#idirectfbinputdevice_DATA = libidirectfbinputdevice_requestor.o
#idirectfbpalette_DATA = libidirectfbpalette_requestor.o
#idirectfbscreen_DATA = libidirectfbscreen_requestor.o
#idirectfbsurface_DATA = libidirectfbsurface_requestor.o
#idirectfbwindow_DATA = libidirectfbwindow_requestor.o
##ifusiondale_DATA = libifusiondale_requestor.o
##icoma_DATA = libicoma_requestor.o
##icomacomponent_DATA = libicomacomponent_requestor.o
##ifusionsound_DATA = libifusionsound_requestor.o
##ifusionsoundstream_DATA = libifusionsoundstream_requestor.o
##ifusionsoundbuffer_DATA = libifusionsoundbuffer_requestor.o
##ifusionsoundplayback_DATA = libifusionsoundplayback_requestor.o
#idivine_DATA = libidivine_requestor.o
libidirectfb_requestor_la_SOURCES = idirectfb_requestor.c
libidirectfb_requestor_la_LDFLAGS = -avoid-version -module
libidirectfb_requestor_la_LIBADD = $(LIBS)
libidirectfbdatabuffer_requestor_la_SOURCES = idirectfbdatabuffer_requestor.c
libidirectfbdatabuffer_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbdatabuffer_requestor_la_LIBADD = $(LIBS)
libidirectfbdisplaylayer_requestor_la_SOURCES = idirectfbdisplaylayer_requestor.c idirectfbdisplaylayer_requestor.h
libidirectfbdisplaylayer_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbdisplaylayer_requestor_la_LIBADD = $(LIBS)
libidirectfbeventbuffer_requestor_la_SOURCES = idirectfbeventbuffer_requestor.c idirectfbeventbuffer_requestor.h
libidirectfbeventbuffer_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbeventbuffer_requestor_la_LIBADD = $(LIBS)
libidirectfbfont_requestor_la_SOURCES = idirectfbfont_requestor.c idirectfbfont_requestor.h
libidirectfbfont_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbfont_requestor_la_LIBADD = $(LIBS)
libidirectfbimageprovider_requestor_la_SOURCES = idirectfbimageprovider_requestor.c
libidirectfbimageprovider_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbimageprovider_requestor_la_LIBADD = $(LIBS)
libidirectfbinputdevice_requestor_la_SOURCES = idirectfbinputdevice_requestor.c idirectfbinputdevice_requestor.h
libidirectfbinputdevice_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbinputdevice_requestor_la_LIBADD = $(LIBS)
libidirectfbpalette_requestor_la_SOURCES = idirectfbpalette_requestor.c idirectfbpalette_requestor.h
libidirectfbpalette_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbpalette_requestor_la_LIBADD = $(LIBS)
libidirectfbscreen_requestor_la_SOURCES = idirectfbscreen_requestor.c
libidirectfbscreen_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbscreen_requestor_la_LIBADD = $(LIBS)
libidirectfbsurface_requestor_la_SOURCES = idirectfbsurface_requestor.c idirectfbsurface_requestor.h
libidirectfbsurface_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbsurface_requestor_la_LIBADD = $(LIBS)
libidirectfbwindow_requestor_la_SOURCES = idirectfbwindow_requestor.c idirectfbwindow_requestor.h
libidirectfbwindow_requestor_la_LDFLAGS = -avoid-version -module
libidirectfbwindow_requestor_la_LIBADD = $(LIBS)
libifusiondale_requestor_la_SOURCES = ifusiondale_requestor.c
libifusiondale_requestor_la_LDFLAGS = -avoid-version -module
libifusiondale_requestor_la_LIBADD = $(LIBS)
libicoma_requestor_la_SOURCES = icoma_requestor.c icoma_requestor.h
libicoma_requestor_la_LDFLAGS = -avoid-version -module
libicoma_requestor_la_LIBADD = $(LIBS)
libicomacomponent_requestor_la_SOURCES = icomacomponent_requestor.c
libicomacomponent_requestor_la_LDFLAGS = -avoid-version -module
libicomacomponent_requestor_la_LIBADD = $(LIBS)
libifusionsound_requestor_la_SOURCES = ifusionsound_requestor.c
libifusionsound_requestor_la_LDFLAGS = -avoid-version -module
libifusionsound_requestor_la_LIBADD = $(LIBS)
libifusionsoundstream_requestor_la_SOURCES = ifusionsoundstream_requestor.c
libifusionsoundstream_requestor_la_LDFLAGS = -avoid-version -module
libifusionsoundstream_requestor_la_LIBADD = $(LIBS) ../compressor/libfusionsound_compressor.la
libifusionsoundbuffer_requestor_la_SOURCES = ifusionsoundbuffer_requestor.c
libifusionsoundbuffer_requestor_la_LDFLAGS = -avoid-version -module
libifusionsoundbuffer_requestor_la_LIBADD = $(LIBS) ../compressor/libfusionsound_compressor.la
libifusionsoundplayback_requestor_la_SOURCES = ifusionsoundplayback_requestor.c
libifusionsoundplayback_requestor_la_LDFLAGS = -avoid-version -module
libifusionsoundplayback_requestor_la_LIBADD = $(LIBS)
libidivine_requestor_la_SOURCES = idivine_requestor.c
libidivine_requestor_la_LDFLAGS = -avoid-version -module
libidivine_requestor_la_LIBADD = $(LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/rules/libobject.make $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu proxy/requestor/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu proxy/requestor/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/rules/libobject.make $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-icomaLTLIBRARIES: $(icoma_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(icoma_LTLIBRARIES)'; test -n "$(icomadir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(icomadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(icomadir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(icomadir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(icomadir)"; \
	}

uninstall-icomaLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(icoma_LTLIBRARIES)'; test -n "$(icomadir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(icomadir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(icomadir)/$$f"; \
	done

clean-icomaLTLIBRARIES:
	-test -z "$(icoma_LTLIBRARIES)" || rm -f $(icoma_LTLIBRARIES)
	@list='$(icoma_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-icomacomponentLTLIBRARIES: $(icomacomponent_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(icomacomponent_LTLIBRARIES)'; test -n "$(icomacomponentdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(icomacomponentdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(icomacomponentdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(icomacomponentdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(icomacomponentdir)"; \
	}

uninstall-icomacomponentLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(icomacomponent_LTLIBRARIES)'; test -n "$(icomacomponentdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(icomacomponentdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(icomacomponentdir)/$$f"; \
	done

clean-icomacomponentLTLIBRARIES:
	-test -z "$(icomacomponent_LTLIBRARIES)" || rm -f $(icomacomponent_LTLIBRARIES)
	@list='$(icomacomponent_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbLTLIBRARIES: $(idirectfb_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfb_LTLIBRARIES)'; test -n "$(idirectfbdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbdir)"; \
	}

uninstall-idirectfbLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfb_LTLIBRARIES)'; test -n "$(idirectfbdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbdir)/$$f"; \
	done

clean-idirectfbLTLIBRARIES:
	-test -z "$(idirectfb_LTLIBRARIES)" || rm -f $(idirectfb_LTLIBRARIES)
	@list='$(idirectfb_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbdatabufferLTLIBRARIES: $(idirectfbdatabuffer_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbdatabuffer_LTLIBRARIES)'; test -n "$(idirectfbdatabufferdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdatabufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdatabufferdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbdatabufferdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbdatabufferdir)"; \
	}

uninstall-idirectfbdatabufferLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbdatabuffer_LTLIBRARIES)'; test -n "$(idirectfbdatabufferdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbdatabufferdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbdatabufferdir)/$$f"; \
	done

clean-idirectfbdatabufferLTLIBRARIES:
	-test -z "$(idirectfbdatabuffer_LTLIBRARIES)" || rm -f $(idirectfbdatabuffer_LTLIBRARIES)
	@list='$(idirectfbdatabuffer_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbdisplaylayerLTLIBRARIES: $(idirectfbdisplaylayer_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbdisplaylayer_LTLIBRARIES)'; test -n "$(idirectfbdisplaylayerdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdisplaylayerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdisplaylayerdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbdisplaylayerdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbdisplaylayerdir)"; \
	}

uninstall-idirectfbdisplaylayerLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbdisplaylayer_LTLIBRARIES)'; test -n "$(idirectfbdisplaylayerdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbdisplaylayerdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbdisplaylayerdir)/$$f"; \
	done

clean-idirectfbdisplaylayerLTLIBRARIES:
	-test -z "$(idirectfbdisplaylayer_LTLIBRARIES)" || rm -f $(idirectfbdisplaylayer_LTLIBRARIES)
	@list='$(idirectfbdisplaylayer_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbeventbufferLTLIBRARIES: $(idirectfbeventbuffer_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbeventbuffer_LTLIBRARIES)'; test -n "$(idirectfbeventbufferdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbeventbufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbeventbufferdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbeventbufferdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbeventbufferdir)"; \
	}

uninstall-idirectfbeventbufferLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbeventbuffer_LTLIBRARIES)'; test -n "$(idirectfbeventbufferdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbeventbufferdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbeventbufferdir)/$$f"; \
	done

clean-idirectfbeventbufferLTLIBRARIES:
	-test -z "$(idirectfbeventbuffer_LTLIBRARIES)" || rm -f $(idirectfbeventbuffer_LTLIBRARIES)
	@list='$(idirectfbeventbuffer_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbfontLTLIBRARIES: $(idirectfbfont_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbfont_LTLIBRARIES)'; test -n "$(idirectfbfontdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbfontdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbfontdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbfontdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbfontdir)"; \
	}

uninstall-idirectfbfontLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbfont_LTLIBRARIES)'; test -n "$(idirectfbfontdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbfontdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbfontdir)/$$f"; \
	done

clean-idirectfbfontLTLIBRARIES:
	-test -z "$(idirectfbfont_LTLIBRARIES)" || rm -f $(idirectfbfont_LTLIBRARIES)
	@list='$(idirectfbfont_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbimageproviderLTLIBRARIES: $(idirectfbimageprovider_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbimageprovider_LTLIBRARIES)'; test -n "$(idirectfbimageproviderdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbimageproviderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbimageproviderdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbimageproviderdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbimageproviderdir)"; \
	}

uninstall-idirectfbimageproviderLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbimageprovider_LTLIBRARIES)'; test -n "$(idirectfbimageproviderdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbimageproviderdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbimageproviderdir)/$$f"; \
	done

clean-idirectfbimageproviderLTLIBRARIES:
	-test -z "$(idirectfbimageprovider_LTLIBRARIES)" || rm -f $(idirectfbimageprovider_LTLIBRARIES)
	@list='$(idirectfbimageprovider_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbinputdeviceLTLIBRARIES: $(idirectfbinputdevice_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbinputdevice_LTLIBRARIES)'; test -n "$(idirectfbinputdevicedir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbinputdevicedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbinputdevicedir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbinputdevicedir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbinputdevicedir)"; \
	}

uninstall-idirectfbinputdeviceLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbinputdevice_LTLIBRARIES)'; test -n "$(idirectfbinputdevicedir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbinputdevicedir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbinputdevicedir)/$$f"; \
	done

clean-idirectfbinputdeviceLTLIBRARIES:
	-test -z "$(idirectfbinputdevice_LTLIBRARIES)" || rm -f $(idirectfbinputdevice_LTLIBRARIES)
	@list='$(idirectfbinputdevice_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbpaletteLTLIBRARIES: $(idirectfbpalette_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbpalette_LTLIBRARIES)'; test -n "$(idirectfbpalettedir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbpalettedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbpalettedir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbpalettedir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbpalettedir)"; \
	}

uninstall-idirectfbpaletteLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbpalette_LTLIBRARIES)'; test -n "$(idirectfbpalettedir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbpalettedir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbpalettedir)/$$f"; \
	done

clean-idirectfbpaletteLTLIBRARIES:
	-test -z "$(idirectfbpalette_LTLIBRARIES)" || rm -f $(idirectfbpalette_LTLIBRARIES)
	@list='$(idirectfbpalette_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbscreenLTLIBRARIES: $(idirectfbscreen_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbscreen_LTLIBRARIES)'; test -n "$(idirectfbscreendir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbscreendir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbscreendir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbscreendir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbscreendir)"; \
	}

uninstall-idirectfbscreenLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbscreen_LTLIBRARIES)'; test -n "$(idirectfbscreendir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbscreendir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbscreendir)/$$f"; \
	done

clean-idirectfbscreenLTLIBRARIES:
	-test -z "$(idirectfbscreen_LTLIBRARIES)" || rm -f $(idirectfbscreen_LTLIBRARIES)
	@list='$(idirectfbscreen_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbsurfaceLTLIBRARIES: $(idirectfbsurface_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbsurface_LTLIBRARIES)'; test -n "$(idirectfbsurfacedir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbsurfacedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbsurfacedir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbsurfacedir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbsurfacedir)"; \
	}

uninstall-idirectfbsurfaceLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbsurface_LTLIBRARIES)'; test -n "$(idirectfbsurfacedir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbsurfacedir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbsurfacedir)/$$f"; \
	done

clean-idirectfbsurfaceLTLIBRARIES:
	-test -z "$(idirectfbsurface_LTLIBRARIES)" || rm -f $(idirectfbsurface_LTLIBRARIES)
	@list='$(idirectfbsurface_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idirectfbwindowLTLIBRARIES: $(idirectfbwindow_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbwindow_LTLIBRARIES)'; test -n "$(idirectfbwindowdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbwindowdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbwindowdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idirectfbwindowdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idirectfbwindowdir)"; \
	}

uninstall-idirectfbwindowLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbwindow_LTLIBRARIES)'; test -n "$(idirectfbwindowdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idirectfbwindowdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idirectfbwindowdir)/$$f"; \
	done

clean-idirectfbwindowLTLIBRARIES:
	-test -z "$(idirectfbwindow_LTLIBRARIES)" || rm -f $(idirectfbwindow_LTLIBRARIES)
	@list='$(idirectfbwindow_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-idivineLTLIBRARIES: $(idivine_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(idivine_LTLIBRARIES)'; test -n "$(idivinedir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idivinedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idivinedir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(idivinedir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(idivinedir)"; \
	}

uninstall-idivineLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(idivine_LTLIBRARIES)'; test -n "$(idivinedir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(idivinedir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(idivinedir)/$$f"; \
	done

clean-idivineLTLIBRARIES:
	-test -z "$(idivine_LTLIBRARIES)" || rm -f $(idivine_LTLIBRARIES)
	@list='$(idivine_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-ifusiondaleLTLIBRARIES: $(ifusiondale_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ifusiondale_LTLIBRARIES)'; test -n "$(ifusiondaledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusiondaledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusiondaledir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ifusiondaledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ifusiondaledir)"; \
	}

uninstall-ifusiondaleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusiondale_LTLIBRARIES)'; test -n "$(ifusiondaledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ifusiondaledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ifusiondaledir)/$$f"; \
	done

clean-ifusiondaleLTLIBRARIES:
	-test -z "$(ifusiondale_LTLIBRARIES)" || rm -f $(ifusiondale_LTLIBRARIES)
	@list='$(ifusiondale_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-ifusionsoundLTLIBRARIES: $(ifusionsound_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsound_LTLIBRARIES)'; test -n "$(ifusionsounddir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsounddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsounddir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ifusionsounddir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ifusionsounddir)"; \
	}

uninstall-ifusionsoundLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsound_LTLIBRARIES)'; test -n "$(ifusionsounddir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ifusionsounddir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ifusionsounddir)/$$f"; \
	done

clean-ifusionsoundLTLIBRARIES:
	-test -z "$(ifusionsound_LTLIBRARIES)" || rm -f $(ifusionsound_LTLIBRARIES)
	@list='$(ifusionsound_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-ifusionsoundbufferLTLIBRARIES: $(ifusionsoundbuffer_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundbuffer_LTLIBRARIES)'; test -n "$(ifusionsoundbufferdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundbufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundbufferdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ifusionsoundbufferdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ifusionsoundbufferdir)"; \
	}

uninstall-ifusionsoundbufferLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundbuffer_LTLIBRARIES)'; test -n "$(ifusionsoundbufferdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ifusionsoundbufferdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ifusionsoundbufferdir)/$$f"; \
	done

clean-ifusionsoundbufferLTLIBRARIES:
	-test -z "$(ifusionsoundbuffer_LTLIBRARIES)" || rm -f $(ifusionsoundbuffer_LTLIBRARIES)
	@list='$(ifusionsoundbuffer_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-ifusionsoundplaybackLTLIBRARIES: $(ifusionsoundplayback_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundplayback_LTLIBRARIES)'; test -n "$(ifusionsoundplaybackdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundplaybackdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundplaybackdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ifusionsoundplaybackdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ifusionsoundplaybackdir)"; \
	}

uninstall-ifusionsoundplaybackLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundplayback_LTLIBRARIES)'; test -n "$(ifusionsoundplaybackdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ifusionsoundplaybackdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ifusionsoundplaybackdir)/$$f"; \
	done

clean-ifusionsoundplaybackLTLIBRARIES:
	-test -z "$(ifusionsoundplayback_LTLIBRARIES)" || rm -f $(ifusionsoundplayback_LTLIBRARIES)
	@list='$(ifusionsoundplayback_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-ifusionsoundstreamLTLIBRARIES: $(ifusionsoundstream_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundstream_LTLIBRARIES)'; test -n "$(ifusionsoundstreamdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundstreamdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundstreamdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ifusionsoundstreamdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ifusionsoundstreamdir)"; \
	}

uninstall-ifusionsoundstreamLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundstream_LTLIBRARIES)'; test -n "$(ifusionsoundstreamdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ifusionsoundstreamdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ifusionsoundstreamdir)/$$f"; \
	done

clean-ifusionsoundstreamLTLIBRARIES:
	-test -z "$(ifusionsoundstream_LTLIBRARIES)" || rm -f $(ifusionsoundstream_LTLIBRARIES)
	@list='$(ifusionsoundstream_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libicoma_requestor.la: $(libicoma_requestor_la_OBJECTS) $(libicoma_requestor_la_DEPENDENCIES) $(EXTRA_libicoma_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libicoma_requestor_la_LINK) $(am_libicoma_requestor_la_rpath) $(libicoma_requestor_la_OBJECTS) $(libicoma_requestor_la_LIBADD) $(LIBS)

libicomacomponent_requestor.la: $(libicomacomponent_requestor_la_OBJECTS) $(libicomacomponent_requestor_la_DEPENDENCIES) $(EXTRA_libicomacomponent_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libicomacomponent_requestor_la_LINK) $(am_libicomacomponent_requestor_la_rpath) $(libicomacomponent_requestor_la_OBJECTS) $(libicomacomponent_requestor_la_LIBADD) $(LIBS)

libidirectfb_requestor.la: $(libidirectfb_requestor_la_OBJECTS) $(libidirectfb_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfb_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfb_requestor_la_LINK) -rpath $(idirectfbdir) $(libidirectfb_requestor_la_OBJECTS) $(libidirectfb_requestor_la_LIBADD) $(LIBS)

libidirectfbdatabuffer_requestor.la: $(libidirectfbdatabuffer_requestor_la_OBJECTS) $(libidirectfbdatabuffer_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbdatabuffer_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbdatabuffer_requestor_la_LINK) -rpath $(idirectfbdatabufferdir) $(libidirectfbdatabuffer_requestor_la_OBJECTS) $(libidirectfbdatabuffer_requestor_la_LIBADD) $(LIBS)

libidirectfbdisplaylayer_requestor.la: $(libidirectfbdisplaylayer_requestor_la_OBJECTS) $(libidirectfbdisplaylayer_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbdisplaylayer_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbdisplaylayer_requestor_la_LINK) -rpath $(idirectfbdisplaylayerdir) $(libidirectfbdisplaylayer_requestor_la_OBJECTS) $(libidirectfbdisplaylayer_requestor_la_LIBADD) $(LIBS)

libidirectfbeventbuffer_requestor.la: $(libidirectfbeventbuffer_requestor_la_OBJECTS) $(libidirectfbeventbuffer_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbeventbuffer_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbeventbuffer_requestor_la_LINK) -rpath $(idirectfbeventbufferdir) $(libidirectfbeventbuffer_requestor_la_OBJECTS) $(libidirectfbeventbuffer_requestor_la_LIBADD) $(LIBS)

libidirectfbfont_requestor.la: $(libidirectfbfont_requestor_la_OBJECTS) $(libidirectfbfont_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbfont_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbfont_requestor_la_LINK) -rpath $(idirectfbfontdir) $(libidirectfbfont_requestor_la_OBJECTS) $(libidirectfbfont_requestor_la_LIBADD) $(LIBS)

libidirectfbimageprovider_requestor.la: $(libidirectfbimageprovider_requestor_la_OBJECTS) $(libidirectfbimageprovider_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbimageprovider_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbimageprovider_requestor_la_LINK) -rpath $(idirectfbimageproviderdir) $(libidirectfbimageprovider_requestor_la_OBJECTS) $(libidirectfbimageprovider_requestor_la_LIBADD) $(LIBS)

libidirectfbinputdevice_requestor.la: $(libidirectfbinputdevice_requestor_la_OBJECTS) $(libidirectfbinputdevice_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbinputdevice_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbinputdevice_requestor_la_LINK) -rpath $(idirectfbinputdevicedir) $(libidirectfbinputdevice_requestor_la_OBJECTS) $(libidirectfbinputdevice_requestor_la_LIBADD) $(LIBS)

libidirectfbpalette_requestor.la: $(libidirectfbpalette_requestor_la_OBJECTS) $(libidirectfbpalette_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbpalette_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbpalette_requestor_la_LINK) -rpath $(idirectfbpalettedir) $(libidirectfbpalette_requestor_la_OBJECTS) $(libidirectfbpalette_requestor_la_LIBADD) $(LIBS)

libidirectfbscreen_requestor.la: $(libidirectfbscreen_requestor_la_OBJECTS) $(libidirectfbscreen_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbscreen_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbscreen_requestor_la_LINK) -rpath $(idirectfbscreendir) $(libidirectfbscreen_requestor_la_OBJECTS) $(libidirectfbscreen_requestor_la_LIBADD) $(LIBS)

libidirectfbsurface_requestor.la: $(libidirectfbsurface_requestor_la_OBJECTS) $(libidirectfbsurface_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbsurface_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbsurface_requestor_la_LINK) -rpath $(idirectfbsurfacedir) $(libidirectfbsurface_requestor_la_OBJECTS) $(libidirectfbsurface_requestor_la_LIBADD) $(LIBS)

libidirectfbwindow_requestor.la: $(libidirectfbwindow_requestor_la_OBJECTS) $(libidirectfbwindow_requestor_la_DEPENDENCIES) $(EXTRA_libidirectfbwindow_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidirectfbwindow_requestor_la_LINK) -rpath $(idirectfbwindowdir) $(libidirectfbwindow_requestor_la_OBJECTS) $(libidirectfbwindow_requestor_la_LIBADD) $(LIBS)

libidivine_requestor.la: $(libidivine_requestor_la_OBJECTS) $(libidivine_requestor_la_DEPENDENCIES) $(EXTRA_libidivine_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libidivine_requestor_la_LINK) $(am_libidivine_requestor_la_rpath) $(libidivine_requestor_la_OBJECTS) $(libidivine_requestor_la_LIBADD) $(LIBS)

libifusiondale_requestor.la: $(libifusiondale_requestor_la_OBJECTS) $(libifusiondale_requestor_la_DEPENDENCIES) $(EXTRA_libifusiondale_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libifusiondale_requestor_la_LINK) $(am_libifusiondale_requestor_la_rpath) $(libifusiondale_requestor_la_OBJECTS) $(libifusiondale_requestor_la_LIBADD) $(LIBS)

libifusionsound_requestor.la: $(libifusionsound_requestor_la_OBJECTS) $(libifusionsound_requestor_la_DEPENDENCIES) $(EXTRA_libifusionsound_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libifusionsound_requestor_la_LINK) $(am_libifusionsound_requestor_la_rpath) $(libifusionsound_requestor_la_OBJECTS) $(libifusionsound_requestor_la_LIBADD) $(LIBS)

libifusionsoundbuffer_requestor.la: $(libifusionsoundbuffer_requestor_la_OBJECTS) $(libifusionsoundbuffer_requestor_la_DEPENDENCIES) $(EXTRA_libifusionsoundbuffer_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libifusionsoundbuffer_requestor_la_LINK) $(am_libifusionsoundbuffer_requestor_la_rpath) $(libifusionsoundbuffer_requestor_la_OBJECTS) $(libifusionsoundbuffer_requestor_la_LIBADD) $(LIBS)

libifusionsoundplayback_requestor.la: $(libifusionsoundplayback_requestor_la_OBJECTS) $(libifusionsoundplayback_requestor_la_DEPENDENCIES) $(EXTRA_libifusionsoundplayback_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libifusionsoundplayback_requestor_la_LINK) $(am_libifusionsoundplayback_requestor_la_rpath) $(libifusionsoundplayback_requestor_la_OBJECTS) $(libifusionsoundplayback_requestor_la_LIBADD) $(LIBS)

libifusionsoundstream_requestor.la: $(libifusionsoundstream_requestor_la_OBJECTS) $(libifusionsoundstream_requestor_la_DEPENDENCIES) $(EXTRA_libifusionsoundstream_requestor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libifusionsoundstream_requestor_la_LINK) $(am_libifusionsoundstream_requestor_la_rpath) $(libifusionsoundstream_requestor_la_OBJECTS) $(libifusionsoundstream_requestor_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/icoma_requestor.Plo
#include ./$(DEPDIR)/icomacomponent_requestor.Plo
#include ./$(DEPDIR)/idirectfb_requestor.Plo
#include ./$(DEPDIR)/idirectfbdatabuffer_requestor.Plo
#include ./$(DEPDIR)/idirectfbdisplaylayer_requestor.Plo
#include ./$(DEPDIR)/idirectfbeventbuffer_requestor.Plo
#include ./$(DEPDIR)/idirectfbfont_requestor.Plo
#include ./$(DEPDIR)/idirectfbimageprovider_requestor.Plo
#include ./$(DEPDIR)/idirectfbinputdevice_requestor.Plo
#include ./$(DEPDIR)/idirectfbpalette_requestor.Plo
#include ./$(DEPDIR)/idirectfbscreen_requestor.Plo
#include ./$(DEPDIR)/idirectfbsurface_requestor.Plo
#include ./$(DEPDIR)/idirectfbwindow_requestor.Plo
#include ./$(DEPDIR)/idivine_requestor.Plo
#include ./$(DEPDIR)/ifusiondale_requestor.Plo
#include ./$(DEPDIR)/ifusionsound_requestor.Plo
#include ./$(DEPDIR)/ifusionsoundbuffer_requestor.Plo
#include ./$(DEPDIR)/ifusionsoundplayback_requestor.Plo
#include ./$(DEPDIR)/ifusionsoundstream_requestor.Plo

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-icomaDATA: $(icoma_DATA)
	@$(NORMAL_INSTALL)
	@list='$(icoma_DATA)'; test -n "$(icomadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(icomadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(icomadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(icomadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(icomadir)" || exit $$?; \
	done

uninstall-icomaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(icoma_DATA)'; test -n "$(icomadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(icomadir)'; $(am__uninstall_files_from_dir)
install-icomacomponentDATA: $(icomacomponent_DATA)
	@$(NORMAL_INSTALL)
	@list='$(icomacomponent_DATA)'; test -n "$(icomacomponentdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(icomacomponentdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(icomacomponentdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(icomacomponentdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(icomacomponentdir)" || exit $$?; \
	done

uninstall-icomacomponentDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(icomacomponent_DATA)'; test -n "$(icomacomponentdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(icomacomponentdir)'; $(am__uninstall_files_from_dir)
install-idirectfbDATA: $(idirectfb_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfb_DATA)'; test -n "$(idirectfbdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbdir)" || exit $$?; \
	done

uninstall-idirectfbDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfb_DATA)'; test -n "$(idirectfbdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbdir)'; $(am__uninstall_files_from_dir)
install-idirectfbdatabufferDATA: $(idirectfbdatabuffer_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbdatabuffer_DATA)'; test -n "$(idirectfbdatabufferdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdatabufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdatabufferdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbdatabufferdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbdatabufferdir)" || exit $$?; \
	done

uninstall-idirectfbdatabufferDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbdatabuffer_DATA)'; test -n "$(idirectfbdatabufferdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbdatabufferdir)'; $(am__uninstall_files_from_dir)
install-idirectfbdisplaylayerDATA: $(idirectfbdisplaylayer_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbdisplaylayer_DATA)'; test -n "$(idirectfbdisplaylayerdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbdisplaylayerdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbdisplaylayerdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbdisplaylayerdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbdisplaylayerdir)" || exit $$?; \
	done

uninstall-idirectfbdisplaylayerDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbdisplaylayer_DATA)'; test -n "$(idirectfbdisplaylayerdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbdisplaylayerdir)'; $(am__uninstall_files_from_dir)
install-idirectfbeventbufferDATA: $(idirectfbeventbuffer_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbeventbuffer_DATA)'; test -n "$(idirectfbeventbufferdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbeventbufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbeventbufferdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbeventbufferdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbeventbufferdir)" || exit $$?; \
	done

uninstall-idirectfbeventbufferDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbeventbuffer_DATA)'; test -n "$(idirectfbeventbufferdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbeventbufferdir)'; $(am__uninstall_files_from_dir)
install-idirectfbfontDATA: $(idirectfbfont_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbfont_DATA)'; test -n "$(idirectfbfontdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbfontdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbfontdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbfontdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbfontdir)" || exit $$?; \
	done

uninstall-idirectfbfontDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbfont_DATA)'; test -n "$(idirectfbfontdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbfontdir)'; $(am__uninstall_files_from_dir)
install-idirectfbimageproviderDATA: $(idirectfbimageprovider_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbimageprovider_DATA)'; test -n "$(idirectfbimageproviderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbimageproviderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbimageproviderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbimageproviderdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbimageproviderdir)" || exit $$?; \
	done

uninstall-idirectfbimageproviderDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbimageprovider_DATA)'; test -n "$(idirectfbimageproviderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbimageproviderdir)'; $(am__uninstall_files_from_dir)
install-idirectfbinputdeviceDATA: $(idirectfbinputdevice_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbinputdevice_DATA)'; test -n "$(idirectfbinputdevicedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbinputdevicedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbinputdevicedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbinputdevicedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbinputdevicedir)" || exit $$?; \
	done

uninstall-idirectfbinputdeviceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbinputdevice_DATA)'; test -n "$(idirectfbinputdevicedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbinputdevicedir)'; $(am__uninstall_files_from_dir)
install-idirectfbpaletteDATA: $(idirectfbpalette_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbpalette_DATA)'; test -n "$(idirectfbpalettedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbpalettedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbpalettedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbpalettedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbpalettedir)" || exit $$?; \
	done

uninstall-idirectfbpaletteDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbpalette_DATA)'; test -n "$(idirectfbpalettedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbpalettedir)'; $(am__uninstall_files_from_dir)
install-idirectfbscreenDATA: $(idirectfbscreen_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbscreen_DATA)'; test -n "$(idirectfbscreendir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbscreendir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbscreendir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbscreendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbscreendir)" || exit $$?; \
	done

uninstall-idirectfbscreenDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbscreen_DATA)'; test -n "$(idirectfbscreendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbscreendir)'; $(am__uninstall_files_from_dir)
install-idirectfbsurfaceDATA: $(idirectfbsurface_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbsurface_DATA)'; test -n "$(idirectfbsurfacedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbsurfacedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbsurfacedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbsurfacedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbsurfacedir)" || exit $$?; \
	done

uninstall-idirectfbsurfaceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbsurface_DATA)'; test -n "$(idirectfbsurfacedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbsurfacedir)'; $(am__uninstall_files_from_dir)
install-idirectfbwindowDATA: $(idirectfbwindow_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idirectfbwindow_DATA)'; test -n "$(idirectfbwindowdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idirectfbwindowdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idirectfbwindowdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idirectfbwindowdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idirectfbwindowdir)" || exit $$?; \
	done

uninstall-idirectfbwindowDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idirectfbwindow_DATA)'; test -n "$(idirectfbwindowdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idirectfbwindowdir)'; $(am__uninstall_files_from_dir)
install-idivineDATA: $(idivine_DATA)
	@$(NORMAL_INSTALL)
	@list='$(idivine_DATA)'; test -n "$(idivinedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(idivinedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(idivinedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(idivinedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(idivinedir)" || exit $$?; \
	done

uninstall-idivineDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idivine_DATA)'; test -n "$(idivinedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(idivinedir)'; $(am__uninstall_files_from_dir)
install-ifusiondaleDATA: $(ifusiondale_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ifusiondale_DATA)'; test -n "$(ifusiondaledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusiondaledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusiondaledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ifusiondaledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ifusiondaledir)" || exit $$?; \
	done

uninstall-ifusiondaleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusiondale_DATA)'; test -n "$(ifusiondaledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ifusiondaledir)'; $(am__uninstall_files_from_dir)
install-ifusionsoundDATA: $(ifusionsound_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsound_DATA)'; test -n "$(ifusionsounddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsounddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsounddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ifusionsounddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ifusionsounddir)" || exit $$?; \
	done

uninstall-ifusionsoundDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsound_DATA)'; test -n "$(ifusionsounddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ifusionsounddir)'; $(am__uninstall_files_from_dir)
install-ifusionsoundbufferDATA: $(ifusionsoundbuffer_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundbuffer_DATA)'; test -n "$(ifusionsoundbufferdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundbufferdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundbufferdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ifusionsoundbufferdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ifusionsoundbufferdir)" || exit $$?; \
	done

uninstall-ifusionsoundbufferDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundbuffer_DATA)'; test -n "$(ifusionsoundbufferdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ifusionsoundbufferdir)'; $(am__uninstall_files_from_dir)
install-ifusionsoundplaybackDATA: $(ifusionsoundplayback_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundplayback_DATA)'; test -n "$(ifusionsoundplaybackdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundplaybackdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundplaybackdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ifusionsoundplaybackdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ifusionsoundplaybackdir)" || exit $$?; \
	done

uninstall-ifusionsoundplaybackDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundplayback_DATA)'; test -n "$(ifusionsoundplaybackdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ifusionsoundplaybackdir)'; $(am__uninstall_files_from_dir)
install-ifusionsoundstreamDATA: $(ifusionsoundstream_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ifusionsoundstream_DATA)'; test -n "$(ifusionsoundstreamdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ifusionsoundstreamdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ifusionsoundstreamdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ifusionsoundstreamdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ifusionsoundstreamdir)" || exit $$?; \
	done

uninstall-ifusionsoundstreamDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ifusionsoundstream_DATA)'; test -n "$(ifusionsoundstreamdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ifusionsoundstreamdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(icomadir)" "$(DESTDIR)$(icomacomponentdir)" "$(DESTDIR)$(idirectfbdir)" "$(DESTDIR)$(idirectfbdatabufferdir)" "$(DESTDIR)$(idirectfbdisplaylayerdir)" "$(DESTDIR)$(idirectfbeventbufferdir)" "$(DESTDIR)$(idirectfbfontdir)" "$(DESTDIR)$(idirectfbimageproviderdir)" "$(DESTDIR)$(idirectfbinputdevicedir)" "$(DESTDIR)$(idirectfbpalettedir)" "$(DESTDIR)$(idirectfbscreendir)" "$(DESTDIR)$(idirectfbsurfacedir)" "$(DESTDIR)$(idirectfbwindowdir)" "$(DESTDIR)$(idivinedir)" "$(DESTDIR)$(ifusiondaledir)" "$(DESTDIR)$(ifusionsounddir)" "$(DESTDIR)$(ifusionsoundbufferdir)" "$(DESTDIR)$(ifusionsoundplaybackdir)" "$(DESTDIR)$(ifusionsoundstreamdir)" "$(DESTDIR)$(icomadir)" "$(DESTDIR)$(icomacomponentdir)" "$(DESTDIR)$(idirectfbdir)" "$(DESTDIR)$(idirectfbdatabufferdir)" "$(DESTDIR)$(idirectfbdisplaylayerdir)" "$(DESTDIR)$(idirectfbeventbufferdir)" "$(DESTDIR)$(idirectfbfontdir)" "$(DESTDIR)$(idirectfbimageproviderdir)" "$(DESTDIR)$(idirectfbinputdevicedir)" "$(DESTDIR)$(idirectfbpalettedir)" "$(DESTDIR)$(idirectfbscreendir)" "$(DESTDIR)$(idirectfbsurfacedir)" "$(DESTDIR)$(idirectfbwindowdir)" "$(DESTDIR)$(idivinedir)" "$(DESTDIR)$(ifusiondaledir)" "$(DESTDIR)$(ifusionsounddir)" "$(DESTDIR)$(ifusionsoundbufferdir)" "$(DESTDIR)$(ifusionsoundplaybackdir)" "$(DESTDIR)$(ifusionsoundstreamdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-icomaLTLIBRARIES \
	clean-icomacomponentLTLIBRARIES clean-idirectfbLTLIBRARIES \
	clean-idirectfbdatabufferLTLIBRARIES \
	clean-idirectfbdisplaylayerLTLIBRARIES \
	clean-idirectfbeventbufferLTLIBRARIES \
	clean-idirectfbfontLTLIBRARIES \
	clean-idirectfbimageproviderLTLIBRARIES \
	clean-idirectfbinputdeviceLTLIBRARIES \
	clean-idirectfbpaletteLTLIBRARIES \
	clean-idirectfbscreenLTLIBRARIES \
	clean-idirectfbsurfaceLTLIBRARIES \
	clean-idirectfbwindowLTLIBRARIES clean-idivineLTLIBRARIES \
	clean-ifusiondaleLTLIBRARIES clean-ifusionsoundLTLIBRARIES \
	clean-ifusionsoundbufferLTLIBRARIES \
	clean-ifusionsoundplaybackLTLIBRARIES \
	clean-ifusionsoundstreamLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-icomaDATA install-icomaLTLIBRARIES \
	install-icomacomponentDATA install-icomacomponentLTLIBRARIES \
	install-idirectfbDATA install-idirectfbLTLIBRARIES \
	install-idirectfbdatabufferDATA \
	install-idirectfbdatabufferLTLIBRARIES \
	install-idirectfbdisplaylayerDATA \
	install-idirectfbdisplaylayerLTLIBRARIES \
	install-idirectfbeventbufferDATA \
	install-idirectfbeventbufferLTLIBRARIES \
	install-idirectfbfontDATA install-idirectfbfontLTLIBRARIES \
	install-idirectfbimageproviderDATA \
	install-idirectfbimageproviderLTLIBRARIES \
	install-idirectfbinputdeviceDATA \
	install-idirectfbinputdeviceLTLIBRARIES \
	install-idirectfbpaletteDATA \
	install-idirectfbpaletteLTLIBRARIES \
	install-idirectfbscreenDATA install-idirectfbscreenLTLIBRARIES \
	install-idirectfbsurfaceDATA \
	install-idirectfbsurfaceLTLIBRARIES \
	install-idirectfbwindowDATA install-idirectfbwindowLTLIBRARIES \
	install-idivineDATA install-idivineLTLIBRARIES \
	install-ifusiondaleDATA install-ifusiondaleLTLIBRARIES \
	install-ifusionsoundDATA install-ifusionsoundLTLIBRARIES \
	install-ifusionsoundbufferDATA \
	install-ifusionsoundbufferLTLIBRARIES \
	install-ifusionsoundplaybackDATA \
	install-ifusionsoundplaybackLTLIBRARIES \
	install-ifusionsoundstreamDATA \
	install-ifusionsoundstreamLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-icomaDATA uninstall-icomaLTLIBRARIES \
	uninstall-icomacomponentDATA \
	uninstall-icomacomponentLTLIBRARIES uninstall-idirectfbDATA \
	uninstall-idirectfbLTLIBRARIES \
	uninstall-idirectfbdatabufferDATA \
	uninstall-idirectfbdatabufferLTLIBRARIES \
	uninstall-idirectfbdisplaylayerDATA \
	uninstall-idirectfbdisplaylayerLTLIBRARIES \
	uninstall-idirectfbeventbufferDATA \
	uninstall-idirectfbeventbufferLTLIBRARIES \
	uninstall-idirectfbfontDATA uninstall-idirectfbfontLTLIBRARIES \
	uninstall-idirectfbimageproviderDATA \
	uninstall-idirectfbimageproviderLTLIBRARIES \
	uninstall-idirectfbinputdeviceDATA \
	uninstall-idirectfbinputdeviceLTLIBRARIES \
	uninstall-idirectfbpaletteDATA \
	uninstall-idirectfbpaletteLTLIBRARIES \
	uninstall-idirectfbscreenDATA \
	uninstall-idirectfbscreenLTLIBRARIES \
	uninstall-idirectfbsurfaceDATA \
	uninstall-idirectfbsurfaceLTLIBRARIES \
	uninstall-idirectfbwindowDATA \
	uninstall-idirectfbwindowLTLIBRARIES uninstall-idivineDATA \
	uninstall-idivineLTLIBRARIES uninstall-ifusiondaleDATA \
	uninstall-ifusiondaleLTLIBRARIES uninstall-ifusionsoundDATA \
	uninstall-ifusionsoundLTLIBRARIES \
	uninstall-ifusionsoundbufferDATA \
	uninstall-ifusionsoundbufferLTLIBRARIES \
	uninstall-ifusionsoundplaybackDATA \
	uninstall-ifusionsoundplaybackLTLIBRARIES \
	uninstall-ifusionsoundstreamDATA \
	uninstall-ifusionsoundstreamLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-icomaLTLIBRARIES clean-icomacomponentLTLIBRARIES \
	clean-idirectfbLTLIBRARIES \
	clean-idirectfbdatabufferLTLIBRARIES \
	clean-idirectfbdisplaylayerLTLIBRARIES \
	clean-idirectfbeventbufferLTLIBRARIES \
	clean-idirectfbfontLTLIBRARIES \
	clean-idirectfbimageproviderLTLIBRARIES \
	clean-idirectfbinputdeviceLTLIBRARIES \
	clean-idirectfbpaletteLTLIBRARIES \
	clean-idirectfbscreenLTLIBRARIES \
	clean-idirectfbsurfaceLTLIBRARIES \
	clean-idirectfbwindowLTLIBRARIES clean-idivineLTLIBRARIES \
	clean-ifusiondaleLTLIBRARIES clean-ifusionsoundLTLIBRARIES \
	clean-ifusionsoundbufferLTLIBRARIES \
	clean-ifusionsoundplaybackLTLIBRARIES \
	clean-ifusionsoundstreamLTLIBRARIES clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-icomaDATA install-icomaLTLIBRARIES \
	install-icomacomponentDATA install-icomacomponentLTLIBRARIES \
	install-idirectfbDATA install-idirectfbLTLIBRARIES \
	install-idirectfbdatabufferDATA \
	install-idirectfbdatabufferLTLIBRARIES \
	install-idirectfbdisplaylayerDATA \
	install-idirectfbdisplaylayerLTLIBRARIES \
	install-idirectfbeventbufferDATA \
	install-idirectfbeventbufferLTLIBRARIES \
	install-idirectfbfontDATA install-idirectfbfontLTLIBRARIES \
	install-idirectfbimageproviderDATA \
	install-idirectfbimageproviderLTLIBRARIES \
	install-idirectfbinputdeviceDATA \
	install-idirectfbinputdeviceLTLIBRARIES \
	install-idirectfbpaletteDATA \
	install-idirectfbpaletteLTLIBRARIES \
	install-idirectfbscreenDATA install-idirectfbscreenLTLIBRARIES \
	install-idirectfbsurfaceDATA \
	install-idirectfbsurfaceLTLIBRARIES \
	install-idirectfbwindowDATA install-idirectfbwindowLTLIBRARIES \
	install-idivineDATA install-idivineLTLIBRARIES \
	install-ifusiondaleDATA install-ifusiondaleLTLIBRARIES \
	install-ifusionsoundDATA install-ifusionsoundLTLIBRARIES \
	install-ifusionsoundbufferDATA \
	install-ifusionsoundbufferLTLIBRARIES \
	install-ifusionsoundplaybackDATA \
	install-ifusionsoundplaybackLTLIBRARIES \
	install-ifusionsoundstreamDATA \
	install-ifusionsoundstreamLTLIBRARIES install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-icomaDATA \
	uninstall-icomaLTLIBRARIES uninstall-icomacomponentDATA \
	uninstall-icomacomponentLTLIBRARIES uninstall-idirectfbDATA \
	uninstall-idirectfbLTLIBRARIES \
	uninstall-idirectfbdatabufferDATA \
	uninstall-idirectfbdatabufferLTLIBRARIES \
	uninstall-idirectfbdisplaylayerDATA \
	uninstall-idirectfbdisplaylayerLTLIBRARIES \
	uninstall-idirectfbeventbufferDATA \
	uninstall-idirectfbeventbufferLTLIBRARIES \
	uninstall-idirectfbfontDATA uninstall-idirectfbfontLTLIBRARIES \
	uninstall-idirectfbimageproviderDATA \
	uninstall-idirectfbimageproviderLTLIBRARIES \
	uninstall-idirectfbinputdeviceDATA \
	uninstall-idirectfbinputdeviceLTLIBRARIES \
	uninstall-idirectfbpaletteDATA \
	uninstall-idirectfbpaletteLTLIBRARIES \
	uninstall-idirectfbscreenDATA \
	uninstall-idirectfbscreenLTLIBRARIES \
	uninstall-idirectfbsurfaceDATA \
	uninstall-idirectfbsurfaceLTLIBRARIES \
	uninstall-idirectfbwindowDATA \
	uninstall-idirectfbwindowLTLIBRARIES uninstall-idivineDATA \
	uninstall-idivineLTLIBRARIES uninstall-ifusiondaleDATA \
	uninstall-ifusiondaleLTLIBRARIES uninstall-ifusionsoundDATA \
	uninstall-ifusionsoundLTLIBRARIES \
	uninstall-ifusionsoundbufferDATA \
	uninstall-ifusionsoundbufferLTLIBRARIES \
	uninstall-ifusionsoundplaybackDATA \
	uninstall-ifusionsoundplaybackLTLIBRARIES \
	uninstall-ifusionsoundstreamDATA \
	uninstall-ifusionsoundstreamLTLIBRARIES

.PRECIOUS: Makefile

%.o: .libs/%.a %.la
	rm -f $<.tmp/*.o
	if test -d $<.tmp; then rmdir $<.tmp; fi
	mkdir $<.tmp
	(cd $<.tmp && $(AR) x ../../$<)
	$(CC) -nostdlib -o $@ -r $<.tmp/*.o
	rm -f $<.tmp/*.o && rmdir $<.tmp

.PHONY: $(LTLIBRARIES:%.la=.libs/%.a)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
